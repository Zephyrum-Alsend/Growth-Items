18.02.2020
-Started Dusfergon
-Set up base initializer and model swapping
-Added 3 claymore and 5 bastard sword models
-Changed logging method, XPReq no longer necessary global; left it as global so player can tweak for catchup commands
-Fixed model refresh unsetting event handler; order OnUnEquip BEFORE OnEquip

19.02.2020
-Finished base initializer and level up block
-Implemented model swapper menu
-Implemented enchantment initializer, forgot Cost and Charge calcs

20.02.2020
-Added Cost and Charge calcs
-Implemented enchantment level up
-Added enchant options for Fire, Frost and Shock
-Finished enchant option framework
-Added/Cleaned up comments

21.02.2020
-Enchant option menu only appears when player is not in combat
-Added 7 claymore, 5 bastard sword, 10 longsword, 10 shortsword, 10 dagger, 8 warhammer, 7 battleaxe, 9 mace and 7 waraxe models
-Implemented sub-type stat adjustment code and added stat adjustment vars to .ini

22.02.2020
-Went over comments
-Polished code
-Got second opinion on comments/readability
-Level up message variety added
-Added 1 warhammer and 1 waraxe model
-Added enchant options for Knight-Slayer and Mage-Slayer

23.02.2020
-Repackaged textures and icons
-Remapped texture paths to repackaged files for 20 bastard, 7 battleaxe, 8 waraxe, 9 mace, 9 warhammer, 10 claymore, 10 dagger, 10 longsword and 10 shortsword meshes
-Added icon change to SetModel function
-Wrote ReadMe.txt
-Set up mod page

25.02.2020
-Fixed incorrect texture path on Type-D
-Adjusted ini settings after playing with it

26.02.2020
-Attempted to rewrite model swapper menu code to support paging and canceling, judged would require full rewrite
-Switched to adding Bow forms, narrowed 28 models down to 10 from Realswords
-Swapping from Bow to !Bow causes CTD, unknown cause

27.02.2020
-Dropped Bow code for now
-Rewrote model swapper menu code to support paging and canceling
-Added MenuLag variable so paging code can be more responsive
-Added Weaken enchant option

28.02.2020
-Added entirety of Classical Weaponry, Realswords Argonian, Khajiit, Orc, Bosmer, Breton, Dunmer, Goblin, Nord, Redguard
-Discovered max script size of 30KB, split SetModel into SetModel and SetModel2, Manager is 26KB atm
-Longsword hit 11 pages, self-capping at 10
-Worn variants removed to cut down size
-Begun reorganizing model numbers

29.02.2020
-Reorganized model numbers
-Rewrote menu buttons to reflect new numbers
-Tweaked ini values
-Began repackaging and remapping textures and icons

01.03.2020
-Repackaged and mapped icons
-Added Random option to model swapper menu, since there's altogether too many models now
-Repackaged and remapped bastard, battleaxe, waraxe, claymore, longsword, shortsword, dagger textures
-Tweaked Random so it never picks the already active model
-Updated all local documentation

04.03.2020
-With the realization I can use [questID].[varname] to use variables from other scripts, Manager's size is halved as I move chunks into functions I once thought impossible
-Coded bow swap, no CTD, also no XP
-Got XP working and not triggering on walls or corpses

05.03.2020
-Decided to add .ini setting for XP amount on hit
-Pondered new enchant option

06.03.2020
-Added Ivellon weapons, 3 claymore, 3 bastard, 1 longsword, 1 shortsword, 1 warhammer, 2 battleaxe, 2 mace models
-Resized Maul mesh so grip can be lowered while keeping length parity with other warhammers
-Added Subjugate enchant option, considering Frenzy and Demoralize effects
-Repackaged and remapped Ivellon textures and icons, should do this as I add meshes from now on to cut down last sprint work load

07.03.2020
-Added inventory function Shift+RMB to show current form name and sub-type menu it's found in, since you may like what Random gave you and can't find it
-Updated all local documentation
-Removed Naegling Longsword to make space for vanilla models
-Added Iron, Steel, Fine Steel, Silver, Dwarven, Elven, Glass, Ebony, Daedric vanilla models
-Added Corruption enchant option
-Added, repackaged and remapped RealSwords Bosmer, Breton, Dunmer, Goblin, Nord, Redguard bows

08.03.2020
-Reorganized menus and indices
-Changed level up messages, bows can't sharpen
-Updated all local documentation for deployment
-Updated online documentation and released V1.2
-Sigil Stone menu != Enchantment menu, tf
-Made function to undo Sigil Stone enchant if it was on weapon, adapted code to OnEnchant too
-Released V1.3

11.03.2020
-Added Unbalance enchant option
-Added Siphon enchant option
-Spotted and fixed error in Subjugate calcs, used Ench6 level instead of Ench7
-Finally figured out fucking inventory references!
-Fixed Swap function so it no longer silently re-equips current weapon
-Started work on delevel feature

12.03.2020
-Finished delevel feature
-Found OBSE stringify operand, messages now have icon of current form
-Despite no change in code, components sporadically failing
-Suspect sudden corruption, many other mods also ceased functioning
-Malwarebytes scan showed no threats, probably Construction Set fuckup or rare Oblivion bug
-After reinstalling everything and examining what does work ingame, came to conclusion .esp is corrupted
-Due to corruption, had to revert to V1.3, have a renamed copy of work done on V1.4 - not all is lost
-Recovered all lost work
-Fixed error in Break enchant decrement loop
-Not all mods' functionality restored, need clean install

13.03.2020
-I'm not touching Oblivion for a while.  What went wrong, where and when elude me, but it's still wrong.

19.03.2020
-Resolved issues with even cleaner install, begun thinking of Staff implementation
-Fixed error in HP check on bow ...forgot the B in DLScalar3B
-Fixed some comments/headers/documentation that I failed to update previously
-Rewrote Charge formula
-Added function to set ModelChange when paging, cut down on repeating code

20.03.2020
-Added ToC function to set ModelChange after sub-type select, refactored code
-Added option for keybindings in ini, as well as keycode table
-Refactored menu code into its own function - reduced Manager size by 80%!