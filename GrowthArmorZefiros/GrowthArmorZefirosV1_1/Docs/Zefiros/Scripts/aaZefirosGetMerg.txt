scn aaZefirosGetMerg

;Main script
;-----------------------------------------------------------------------------
;aaZefirosManager
;-----------------------------------------------------------------------------

;Used scripts
;-----------------------------------------------------------------------------
;-----------------------------------------------------------------------------

;Related scripts
;-----------------------------------------------------------------------------
;aaZefirosIncrementEnchant
;aaZefirosPrepMerge
;aaZefirosSacrifice
;aaZefirosSetSeek
;aaZefirosUndoEnchant
;-----------------------------------------------------------------------------

;Used globals
;-----------------------------------------------------------------------------
;-----------------------------------------------------------------------------

;Related globals
;-----------------------------------------------------------------------------
;-----------------------------------------------------------------------------

;Description
;-----------------------------------------------------------------------------
;Compares an array of slot masks with a single slot mask.
;Returns an array of indexes in Dflt that share slot(s) with Slot.
;-----------------------------------------------------------------------------

;Parameters
;-----------------------------------------------------------------------------
long Slot
array_var Dflt

array_var Merg ;Return value
array_var Iter
long i
;-----------------------------------------------------------------------------

;-----------------------------------------------------------------------------
begin Function { Slot, Dflt }
;-----------------------------------------------------------------------------

	Let Merg := ar_Construct Array

	ForEach Iter <- Dflt

		Let i := *Iter

		;If i shares 1 bit with Slot
		if eval( Slot & i )

			;Save the current key
			ar_Append Merg Iter["key"]

		endif

	loop


	SetFunctionValue Merg
	Return
;-----------------------------------------------------------------------------
end ;Function { Slot, Dflt }
;-----------------------------------------------------------------------------