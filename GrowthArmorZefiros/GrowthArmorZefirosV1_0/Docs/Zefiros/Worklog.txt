2020.04.13
-Begun work on mod
-Setting up basic growth system
-Created SetWeight
-Created SetStat
-Created SetXPReq

2020.04.14
-Created DefaultINI
-Created Object
-Had to stall work as I further mull how to implement growing damage type resistance
	-OBSE handler to get damage taken	-handler to get magic effect hit by
	-function to get if weapon ignores normal weapon resistance
	-nothing to get how much fire/frost/shock/etc. damage taken, only total
	-can get enchantment of what hit, pull magnitudes from there
	-can get resistances of player, apply to magnitudes
	-but also need difficulty setting, unknown multiplier to damage taken
	-how do I sync multiple event handlers?	-probably need another quest

2020.04.18
-Made name setting more robust by adding str_Prefix and str_Postfix along with s%Fix flags to indicate which %fix to omit
-Created SetName
-Message icon path is magenta
-GetIconPath returns ""
-GetTexturePath returns ""
-Armor has 2 icon paths, so can't resolve which
-Found GetBipodIconPath, but need to indicate which sex
-Created GetPCBIP (GetPCBipedIconPath) which returns the Male/Female path based on Player's sex
-Message icon works
-Will leave in printc's I use for testing as printd's, which won't show up without the debug flag set
-Added Debug global so can toggle printd ingame, also added to ini for diagnosing initializer problems
-Switched to DebugPrint from printd b/c printd doesn't read format strings
-Went ingame to test OnHealthDamage handler, works as expected so far, except...
	-damage over time triggers every frame, 100s of ticks from a single spell
-AR of all pieces is 1
-Turns out, despite the Object Window displaying AR as a float, it is in fact a long and 400AR = 4AR
-Converted all AR vars from floats to shorts
-Forgot to SetArmorType in SetWeight
-Seems OnMagicEffectHit is always called before OnHealthDamage
-OnMagicApply has inconsistent filtering, but with GetSelf inside, can get caster, target and spell
-OnHitWith will not fire for spells
-If I can't get the time for a DoT, can't reliably accredit elemXP to it
-DoT can come from enchant or spell, OnMagicApply or OnHitWith, conflict ho
-Maybe DoTs appear on Active Effects?
-They do!
-I can also indirectly get the magnitude, duration and caster of all Active Effects, maybe solve recalc damage formula problem?
-Instant effects don't appear on Active Effects, there goes that
-But can still do even distribution with ability to get duration on DoTs

2020.04.19
-Created LogXP and added globals for tracking combat XP, expanded OnDamage to add XP
	-Using globals because QuestID.VarName is slow, as file read/write on Dusfergon showed
-Added fDamageLag for latency control, starting DamageAnalysis quest script
-DamageAnalysis is shorter than expected, uses HasMagicEffect instead of GetActiveEffects to test for DoT
-Created OnWeaponHit to trigger physical damage type flags
-Removed OnMagicApply, unreliably fires and data unecessary in current approach
-Moved handler sets to Object
-Equipping another shield does not run OnUnEquip block for the shield, but directly unequipping it does
-Circumvented issue by using OnActorUnequip handler, may convert all On(Un)Equip blocks to this so don't have to maintain 2 Object scripts
-Converted blocks to handlers, made SetEquipHandlers to set all
-Expanded CleanUp to not only purge handlers, but re-evaluate Equip flag and reset handlers if necessary
-Learned OBSE Let supports +=, I have code to shorten!
-Created SetEquipHandlers to handle handler creation for On(Un)Equip
-Double checked and corrected documentation of existing code

2020.04.20
-Created SetResists to add resist effects to enchantments
-Started using array_vars as parameters more often, functions then support variable parameters
-Created SetEnchants to avoid typing out 6 checks and sets for enchantments
-Updated CleanUp to null array_vars when Mode is 1 and moved further up Init block
-Created SetEffectMagnitude to update Resists, but also designed to be used for any effect
-Properly adds new Resists
-Properly updates existing Resists
-Works with Fortify effects
-But with multiple Fortify effects, updating freezes game - single Fortify effect is fine
-GetNthEffectItemActorValue freezes the game

2020.04.21
-GetNthEffectItemActorValue wasn't the problem, I forgot to increment the iterator within the while loop
-SetEffectMagnitude now works for all cases, finishing documentation
-Realised I can repurpose function handle setting all stats instead of making one for each stat, so SetEffectMagnitude is now SetEffectItem
-Added conditions for deleting effect items in SetEffectItem
-List of allowable enchants, plan to be 1 by 1 instead of effect sets
	-Fortify Attribute
	-Fortify Skill
	-Fortify Health/Fatigue/Magicka
	-Shield
	-Feather
	-Restore Health/Fatigue/Magicka
-Shield exclusive enchant effects
	-Reflect Damage
	-Reflect Spell
	-Absorb Spell

2020.04.22
-Invetigated ways to detect application of diseases and poisons
-The best method is either to scan Active Effects list and get the sources to check for spell type or use OnMagicApply and check GetSelf == Player then spell type

2020.04.23
-OnMagicApply can detect when diseases are applied, but it's unfortunate the filtering options are subpar
-GetSelf when it fires, then do rest if Player
-Diseases are cast on the Player by the Player
-Finding an enemy who uses Poison has been harder, bandits most likely to carry and use it
-Poisons are registered as SpellType 0 (Spell) instead of 5 (Poison), cumulative poison resist is out then
-Added Drain Health to list of effects that count as non-elemental damage
-Added section to purge enchantments on game load
-Enchanted weapons do not have the ignorenormalresistance flag set, added check for enchantment in OnWeaponHit
-Applied enchantments do not take effect until the item is re-equipped
-Player.EquipItem triggers the OnEquip handler twice
-Turns out there's 2 OnEquip handlers set, now to find out where
-Somehow, SetEquipHandlers is setting 2 OnEquip handlers, despite explicitly setting only 1
-I see no syntax error in the code, and moving it to Manager did not resolve the issue
-For now, all I can do is put a check in OnEquip to prevent Equip from going over 6
-OnEquip handler runs twice for every armor except the Shield
-Tried different syntax for SetEventHandler, no difference
-May have to revert to using the actual blocks instead of handlers
-Commented out OnEquip handler, moved code to OnEquip block in Object

2020.04.24
-After more testing, discovered OnActorEquip handler fires twice for enchanted items
-Added Resist Disease variables and globals, updated SetResists and Manager
-Created OnMagicApply to handle detection of diseases
-Changed how Paralysis and Disease resistances work so ini vars are more intuitive
	-Both resists now use sXPResist to determine resist effect
	-sXPPara now dictates how much RXP/sec paralyzed is awarded, instead of seconds paralyzed till resist effect up
	-fXPDisease used to be number of diseases caught till resist effect up, now sXPDisease and how much RXP/illness
-Created RefreshEquipped to handle re-equipping items after enchanting, can also use for form changing
-Looking over Manager code, noticed did not keep header documentation up to date

2020.04.27
-Began designing SetEnchant, for setting all enchant effects on all items
-Created SetEffectStat
-Added Enchantment variables for effect magnitudes
-Added Enchantment section to DefaultINI
-Adjusted DefaultINI comments to better explain Dynamic Resistances

2020.05.02
-While I'd like to not use dot notation in creating enchantments, the idea of creating an array to house the data for hunndreds of effects and maintaining is too daunting
-dot notation is easier to code
-In order to facilitate making Dusfergon's active enchant indexing possible, created GetEffectCode to convert global short into EffectCode and ActorValueCode
-Creating 246 new globals to track enchantment levels and active enchantment for each piece, 41 globals per item
	-I considered overloading globals with multiple values, but that would reduce their individual level caps, which need to be ( sLevelCap - sEnchStart )
		-The player can pheasibly pick only one effect every Seek, having its level match the item's
-Created Body globals
-Created Foot globals
-Created Hand globals
-Created Head globals
-Created Legs globals
-Created Shld globals
-Went for an array approach afterall, to remove the need to copy&paste a giant block 6 times
-Creating the multi-dimensional array to hold all the enchant data exceeds the max script size
-Cannot make the complete array even in a separate function, MAX_SCRIPT_SIZE exceeded
-Dropping level data from array, cut down array size to 1/6, will need second array to hold level data
-Created GetEnchantLevels
-Created framework for setting leveled enchantments on items, throwing runtime errors
-Array creation was placed before CleanUp in my re-ordering then re-re-ordering of init block
-Tested Fortify Strength, Fortify Blade, Shield ingame, all work as expected
-Manager header is still not uptodate
-Reviewing during documentation process, GetEffectCode may not be necessary... Will keep it around until leveling block(s) are done
-Added XP > 0 check to DamageAnalysis to save cycles while not in combat

2020.05.03
-Updated Manager's Used Scripts and Used Globals sections
-Beginning Enchant Seek code
-SeekOnce will double as trigger flag for block and storage for button value
-SeekOnce will not double as trigger flag and button value, because page number and button value are stored in Item
-Created GetEnchChoice which houses all seek menu code
-Tested ingame for Shield, Feather, all Restores, some Fortifies - all work as expected
-Now to test if a while loop emulates the responsiveness of low script lag...
	-Freezes game
	-Infinite loop because while loop doesn't give GetButtonePressed enough time to return a value
-Finished and tested Seek code. Menus work, effects are added, variables cleaned up
	-Seek code really looks like it could be factored out into a function but... That may fuck up the menus
-RefreshEquipped is unequipping but not equipping gear after the first initialization
	-RefreshEquipped during the init phase works
	-RefreshEquipped after seek phase only unequips
-Trying adding suit of armor, unequipping armor by equipping newly added armor, then equipping old armor and removing new armor
	-Still same bug, old armor not re-equipped
-If I put a pause between the unequip and re-equip, it works
-Now to find out how short I can make that pause...
-Looks like as long as they're not done on the same frame the bug won't happen
-Created RefreshEquip
-Created RefreshUnEquip
-Created RefreshOnce flag
-Added block at bottom of Manager to refresh equipped items in a 2 frame time span, since model change will use it too

2020.05.04
-Added sEnchResist to flag if having resistances should enchant the items early
-Began work on Level Up block
-Created SetEnchLevel to increment enchant level globals
-Doing stat set instead of mod b/c it's easier, no new functions needed
-Level up armor stat block is identical to init armor stat block, should make it a function
-Created SetArmor
-Function doesn't work as long as its a function
-Exact same code (Copy&Paste) in GameMode block works as expected, factored to a function and it doesn't
	-Armor weight and stats mismatch, heavy w/ light stats or light w/ heavy stats
-SetArmor deleted

2020.05.05
-Created ModStat to replace "lazy" level up method

2020.05.08
-Created SetFlavorText for displaying all flavor text
-Found Dereference/Unbox operator ( *array ) which can replace Item["value"] in a lot of places
-Replaced all instances of array["value"] with *array where it didn't throw errors
-Created LogLevel
-Added block for Half-way messages
-Created SetFlavorBox and renamed SetFlavorText to SetFlavorMessage
-Have 3 first boot messages, 4 level up messages, 5 form change messages
-Have 6 level cap messages

2020.05.09
-Re-balanced effect growth rates
	-REDG, RFLC, SABS Mult +0.2
	-FOAT, FOSK Base +1 Mult +0.6
	-REFA Mult +0.1
	-REHE Base +1 Mult +0.025
	-RESP Mult +0.05
	-SHLD Base +3 Mult +0.7666
-Discovered AR is not updated by game until gear re-equipped, set Refresh flag in level up
-Divided level up block into 2
	-Stats update
	-Global and flag update
		-Allows Set aaZefirosLevel to X to have an immediate effect
-Included redundant flag checks into both blocks so flags are set properly regardless of level change by XP or console
-Consolidated ModStat DebugPrints into 1 line to reduce console clog on level up
-Cannot reduce DebugPrint lines further without reducing their usefulness as diagnostics
	-If wearing half set, can still see command to change aaZefirosLevel in log after level up

2020.05.11
-begun prepping level change block to handle break changes
	-stats need no new code
	-added branches to enchant increment for disenchant
	-adapting SetEnchLevel to handle resetting everything to 0
		-Found it didn't keep globals from going negative, so fixing that too
	-RemoveAllEffectItems is causing CTD
		-Removed ForEach loop, tried just RemoveAllEffectItems EnchBody
			-Works
		-Individually called RemoveAllEffectItems on all enchants
			-CTD
		-Comment out 1 call, for Shld
			-Works
		-Uncomment Shld, comment out Legs, still 5/6 active
			-Works
		-Try all 6 to be sure
			-Works...?
		-Try ForEach loop again, b/c fuck it
			-Works???
-Changed SeekOnce check to handle its level getting skipped
-Removed SeekOnce check from Level up block, as its purpose was to prevent Level change block from skipping Seek levels
-Created Equip array so RefreshOnce can use that instead of Stack
	-Nothing uses Stack while RefreshOnce > 0 right now, but can't guarantee that in the future
-Added extra stage to RefreshOnce so you don't appear naked during message boxes
-Having Level change block stop every Seek level is requiring a number of new, complex if statements
-Level change block now properly handles leveling up past multiple Seek levels, or just one, including from below sEnchStart
-Moved SetXPReq from Level Up to Level Change so XP behaves normally without an extra console command
-Moved SetXPReq back because XP is kept at 0 without the Set XP to XPReq console command, making first genuine level up take forever
-Level Change still has to handle enchant level down while staying above sEnchStart
	-Round robin reduce each by sEnchSeek like Dusfergon?
	-Could track each Seek choice with array_var, but array_var goes poof on QuitGame
	-string_vars are saved with save file
	-What if player changes Seek frequency? Will have to track the enchant increment for each level
-Created ActvBody/Foot/Hand/Head/Legs/Shld string_vars for above purpose
-Created SetSeekArray to append things to above string_vars
-Added initializer to Level == 0 sub-block in GetGameLoaded block, all strings should be empty on first boot
-Created RefreshResistOrder to keep Resist effects at the end of the enchantment

2020.05.12
-Created UndoEnchant to... undo enchant levels
-Seems to be in working order
-Purge enchants is crashing game again... such an inconsistent CTD
	-I may just make my own RemoveAllEffectItems function to circumvent this
-Created RemoveAllEffectItems
-No CTDs while testing, will have to test periodically since the old CTD was erratic
-When going down to Lv10 then up to Lv11, SeekOnce isn't set
-When going below sEnchStart then back up to it, SeekOnce fails to get set
-Added Level < sEnchStart to SeekOnce check
-Also tested going to Lv16 > Lv15 > lv16 and SeekOnce was properly set both times
-Added sBreakThreshold to ini
-Created Broken global to track number of broken items
-Wrote Break Check block, checks number of broken armor pieces and applies delevel if necessary
-Global Broken not necessary, but saves cycles on initialization (have to call GetBroken on everything again)
-There is an exploit where if Broken < sBreakThreshold, then you set sBreakThreshold < Broken, delevel will never occur
	-This is because sBreakThreshold is loaded on GetGameLoaded and that same block sets BreakOnce so delevel doesn't happen twice if loading a save with broken gear
	-Decided to leave this exploit in: not much merit to having broken armor and pain in the arse to fix
-Added IsInCombat check to Seek code, forgot to add it
-New check will throw off ScriptLag if, say, player opens menu during combat and SeekOnce is set
	-ScriptLag won't be set back to 0.5 until SeekOnce is unchecked, which won't happen until combat is done
-Created new flag to fix this, AltLag
	-Instead of checking SeekOnce == 0 && RefreshOnce == 0, ScriptLag only checks AltLag == 0
	-Seek code and Refresh block both set and unset AltLag
-Added 8 Armor Eater, 6 Level Up, 4 Full Reset, 6 Delevel messages
-Begun compressing Seek code
-Code throws a litany of runtime errors, console clogged
	-What I can make out, it seems an array is not getting initialized, which leads to 8 different things throwing errors too
-Ctrl+Z until all new work is gone, tested
	-Same litany of errors - something didn't compile right but Compile All throws no errors
-With DebugPrint, MessageBox and ;, narrowed down error source to GetEnchChoice
-Narrowing things down further, seems Item is getting Nulled by something external
-While nothing does Item := ar_Null, Item is used in several ForEach loops that may still run during Seek
-Created array_var Seek to replace Item inside Seek code, runtime errors with narrowed code are gone
-Unnarrowed code throws no runtime errors
-Re-implemented code compression
	-Using Stack to store names and values, checked nothing overwrites it but my future code may
-Compressed Seek code functions as expected
-Replaced all instances of Stack within Seek block with new array_var Actv
-Added all new array_vars to CleanUp code

2020.05.13
-Added 6 halfway messages
-Created SetLevelCap for dynamic cap type
-Added checks to unset CapOnce during Flavor Text sub-block
-Tested Break block ingame, works as expected but forgot to adjust armor durability down
-Created GetEnchantEffect to display effects
-MessageBox gets overloaded around Lv101 if selecting a different effect every time
-MessageBoxEX works, but may have missed a Seek at Lv91 - could have spaced and chose the same, but could also have an error in Seek check
-Went up to Lv101 again, I spaced out earlier
-Tweaked ordering of LevelLog and Flavor Text in console, Flavor Text outputs last now
-Created CapDurability to keep durability at or below 100% (125% if Expert Armorer) when changing level
-Replaced CapDurability with GetDurability and SetDurability, so now durability % remains consistent across levels

2020.05.18
-Created RefreshInv, copy&paste of Dusfergon's function
-Created Offer, akin to Dusfergon's Eat function
-Two possible ways to about absorbing durability:
	-Goes to specific item that shares same slot
	-Equally distribute among all 6 pieces
-Latter would be easier to code, but leaning towards former
-Factored stat altering half of Offer into new Sacrifice function
-Decided on former for durability absorption
-Created GetSlotShared to tell me which Self shares slot(s) with an item
-Tested in game with regular armor and what multi-slot armor I have, works as intended
-After testing on non-armor for tail and ring slots, encountered runtime error as Sacrifice tries to pull from a Null array_var
-Fixed by adding a size check before the assign and aborting function if == 0
-What if there's actual armor in the tail or, Nine forbid, ring slots?
	-It would get aborted as is, but that would be jank from the end user's perspective
	-Associated Legs with tail slot, Shield with all other slots, so Sacrifice shouldn't fail due to absurd slots
-Added check to Sacrifice for if corresponding slot's item is in inventory, tells Player if not
-Sacrifice removes item from inventory, awards XP, but fails to add durability
	-Is not a UI bug
	-Is not Ref Self acting as a pointer to Stack[0] which gets overwritten later
	-Is engine shortcut causing bug
		-If CurrentHealth == MaxHealth, engine keeps CHealth == MHealth, SetCurrentHealth cannot override
-Set fAbsorption to 0.03 after testing 0.01-0.05
-Decided on doing Mimic first over Form Change
-Going to use multi-dimensional array to store Form data
	-Mimic will be [0]
-Created GetFormData to compile array
-Mimic data requires 7 strings per item and 1 long global, far cry from just 3 for weapons...
-Created ValidateMimic to validate Mimic data, also resets data if invalid
-Created ValidateBiped to shorten length of if checks in ValidateMimic
-Began true work on GetFormData
-Added Fur and Iron sets, began testing ingame
-Created SetForm
-Missing meshes for all parts
	-string_vars need to be stringified, CS function was reading var name as a char array
	-unlike in engine, if female path is left blank it does not default to male path
-Fixed missing meshes, both male and female
-Tested if RefreshInv could update AR and Active Effects, does not
-Created SetMimic to activate when menu hotkeys are pressed
-Created SaveMimic to factor out code transfering array data to strings, will regretfully need to use .notation here

2020.05.20
-Spent a full 8 hours debugging a CTD when SetMimic is called on a Ring or Tail slot, only to find out it was all because I had called Message with a format string instead of MessageEX
	-Incorrect Message call only occured if Mimic couldn't take place
-Adapted SetForm to handle merging and unmerging items
	-Will look into separating into a separate function in the future
-When merging items, still need to account for
	-Max durability
	-Current durability
	-Enchantments
	-Enchantment level up
	-Enchantment Seek
	-Equip flag
	-Weight
	-AR
	-Value
-Also need to update documentation, haven't updated Git in weeks and some function headers were never completed
-Adjusted when items are removed during merge in SetForm so if it fails, none are left unequipped
-Copied RefreshOnce block to MenuMode to run after SetForm calls
-Added Equip command right after adding back unmerged items
-Tried UnEquip -> Equip in SetForm just incase it works
-It actually works
-Removed RefreshOnce block from MenuMode
-While writing header for SetMimic, noticed I hadn't tested if it works for females (Paths for female can be blank)
-Female paths that are blank result in no change to affected attribute
-Added checks to SetMimic that match empty female paths to their male counterparts

2020.05.21
-Added merging of stats to SetForm, should separate it soon
-Discovered if merge items then load save without merge, have extra armor parts
	-Added check for GetItemCount == 0 when adding back merged items, resolved above issue
-Split off merger code into SetMerge
-ValidateBiped returning false positives
	-Could be setup in ValidateMimic
	-Didn't stringify Path in ValidateMimic
-Merged stats not right after boot, added missing items on GetGameRestarted to address issue
	-This will result in multiples of Zefiros if Player had stored/dropped instead of merged them

2020.05.22
-Created Slot% globals to mark when something is merged
-Created PrepMerge to replace stopgap solution from yesterday
-Added checks to Object for merged items using new Slot% globals
-Added same checks to CleanUp and OnUnEquip
-OnEquip block not properly incrementing Equip
	-Both This and GetSelf are failing
	-Worse comes to worst, I make an Object script for each part
	-This and GetSelf return 0 when called on an inventory object
-Created ObjectBody/Foot/Hand/Head/Legs/Shld, obsoleting Object
-Right before deleting OnEquip script, thought "what if I check Item.IsArmor before running?"
	-First, IsArmor returns false
	-IsEquipped returns false
	-IsPlayable (which can only return true for armor or clothing) returns true
	-Still fires twice when enchanted with IsPlayable check
	-Back to the brute force solution!
-Created SetMergeEnch to merge enchantments when merging items
-Added RefreshResistOrder call to SetMergeEnch, which needs a redesign to be more flexible
	-Rewrote RefreshResistOrder
	-Now takes an array of effect and actor value codes and an array of enchantments
	-No longer uses SetEffectItem, instead doing all remove/add itself
	-Renamed to ReorderEffects
	-All calls to RefreshResistOrder have been corrected
-RefreshEquip fails on load save after booting, of course
-Adding extra stage to RefreshOnce to work around this
-RefreshEquipped is now officially redundant
-Finally copying code for GitHub, not gonna delete deleted scripts there for posterity