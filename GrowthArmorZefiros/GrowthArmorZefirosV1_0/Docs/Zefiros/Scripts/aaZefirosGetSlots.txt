scn aaZefirosGetSlots

;Main script
;-----------------------------------------------------------------------------
;aaZefirosManager
;-----------------------------------------------------------------------------

;Used scripts
;-----------------------------------------------------------------------------
;-----------------------------------------------------------------------------

;Related scripts
;-----------------------------------------------------------------------------
;-----------------------------------------------------------------------------

;Used globals
;-----------------------------------------------------------------------------
;aaZefirosSlotBody
;aaZefirosSlotFoot
;aaZefirosSlotHand
;aaZefirosSlotHead
;aaZefirosSlotLegs
;aaZefirosSlotShld
;-----------------------------------------------------------------------------

;Related globals
;-----------------------------------------------------------------------------
;-----------------------------------------------------------------------------

;Description
;-----------------------------------------------------------------------------
;Returns an array containing all Slot globals.
;
;Recommend calling this function immediately after SetMerge returns.
;-----------------------------------------------------------------------------

;Parameters
;-----------------------------------------------------------------------------
array_var Stack ;Return value
;-----------------------------------------------------------------------------



;-----------------------------------------------------------------------------
begin Function { }
;-----------------------------------------------------------------------------

	Let Stack := ar_Construct Array
	
	ar_Append Stack aaZefirosSlotBody
	ar_Append Stack aaZefirosSlotFoot
	ar_Append Stack aaZefirosSlotHand
	ar_Append Stack aaZefirosSlotHead
	ar_Append Stack aaZefirosSlotLegs
	ar_Append Stack aaZefirosSlotShld


	SetFunctionValue Stack
	Return
;-----------------------------------------------------------------------------
end ;Function { }
;-----------------------------------------------------------------------------