scn aaZefirosGetFormsArray

;Main script
;-----------------------------------------------------------------------------
;aaZefirosManager
;-----------------------------------------------------------------------------

;Used scripts
;-----------------------------------------------------------------------------
;aaZefirosGetFormData1
;aaZefirosGetFormData2
;aaZefirosGetFormData3
;aaZefirosGetFormData4
;-----------------------------------------------------------------------------

;Related scripts
;-----------------------------------------------------------------------------
;-----------------------------------------------------------------------------

;Used globals
;-----------------------------------------------------------------------------
;-----------------------------------------------------------------------------

;Related globals
;-----------------------------------------------------------------------------
;-----------------------------------------------------------------------------

;Description
;-----------------------------------------------------------------------------
;Creates and returns a multi-dimensional array containing file path, name and 
;slot data on biped objects.  Mimicry data reserves index 0 of Array1, and 
;its contents must be passed in as a parameter.
;
;Array0:
;[0]Body
;[1]Foot
;[2]Hand
;[3]Head
;[4]Legs
;[5]Shld
;
;Array1:
;[0]Array2
;[1]Array2
;[2]...
;
;Array2:
;[0]MaleModelPath
;[1]FemaleModelPath
;[2]MaleGroundPath
;[3]FemaleGroundPath
;[4]MaleIconPath
;[5]FemaleIconPath
;[6]Name
;[7]Slot
;-----------------------------------------------------------------------------

;Parameters
;-----------------------------------------------------------------------------
array_var MimicData

array_var Data ;Return value
short C1
short C2
short i
short j
string_var Path
;-----------------------------------------------------------------------------

;-----------------------------------------------------------------------------
begin Function { MimicData }
;-----------------------------------------------------------------------------

	Let Data := ar_Construct Array
	Let Data[0] := ar_Construct Array
	Let Data[1] := ar_Construct Array
	Let Data[2] := ar_Construct Array
	Let Data[3] := ar_Construct Array
	Let Data[4] := ar_Construct Array
	Let Data[5] := ar_Construct Array

	;-----------------------------------------------------------------------------
	;Assign Mimic data
	;-----------------------------------------------------------------------------
	Let Data[0][0] := MimicData[0]
	Let Data[1][0] := MimicData[1]
	Let Data[2][0] := MimicData[2]
	Let Data[3][0] := MimicData[3]
	Let Data[4][0] := MimicData[4]
	Let Data[5][0] := MimicData[5]


	;-----------------------------------------------------------------------------
	;Append everything else
	;-----------------------------------------------------------------------------
	Let Data := Call aaZefirosGetFormData1 Data
	Let Data := Call aaZefirosGetFormData4 Data
	Let Data := Call aaZefirosGetFormData2 Data
	Let Data := Call aaZefirosGetFormData3 Data
	
	
	;-----------------------------------------------------------------------------
	;Redirect empty paths to their fe/male counterparts
	;-----------------------------------------------------------------------------
	Let C1 := ar_Size Data
	Let i := 0
	while ( i < C1 )

		Let C2 := ar_Size Data[i]
		Let j := 0
		while ( j < C2 )

			;-----------------------------------------------------------------------------
			;Mesh
			;-----------------------------------------------------------------------------
			;Female -> Male
			Let Path := Data[i][j][1]
			
			if eval( 0 == sv_Length Path )
				
				Let Data[i][j][1] := Data[i][j][0]
				
			endif

			;Male -> Female
			Let Path := Data[i][j][0]
			
			if eval( 0 == sv_Length Path )
				
				Let Data[i][j][0] := Data[i][j][1]
				
			endif

			;-----------------------------------------------------------------------------
			;Ground mesh
			;-----------------------------------------------------------------------------
			;Female -> Male
			Let Path := Data[i][j][3]
			
			if eval( 0 == sv_Length Path )
				
				Let Data[i][j][3] := Data[i][j][2]
				
			endif

			;Male -> Female
			Let Path := Data[i][j][2]
			
			if eval( 0 == sv_Length Path )
				
				Let Data[i][j][2] := Data[i][j][3]
				
			endif

			;-----------------------------------------------------------------------------
			;Icon
			;-----------------------------------------------------------------------------
			;Female -> Male
			Let Path := Data[i][j][5]
			
			if eval( 0 == sv_Length Path )
				
				Let Data[i][j][5] := Data[i][j][4]
				
			endif

			;Male -> Female
			Let Path := Data[i][j][4]
			
			if eval( 0 == sv_Length Path )
				
				Let Data[i][j][4] := Data[i][j][5]
				
			endif

			Let j += 1
		loop

		Let i += 1
	loop	


	sv_Destruct Path
	SetFunctionValue Data
	Return
;-----------------------------------------------------------------------------
end ;Function { MimicData }
;-----------------------------------------------------------------------------