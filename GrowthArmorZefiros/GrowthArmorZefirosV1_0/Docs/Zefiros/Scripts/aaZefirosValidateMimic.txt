scn aaZefirosValidateMimic

;Main script
;-----------------------------------------------------------------------------
;aaZefirosManager
;-----------------------------------------------------------------------------

;Used scripts
;-----------------------------------------------------------------------------
;aaZefirosValidateBiped
;-----------------------------------------------------------------------------

;Related scripts
;-----------------------------------------------------------------------------
;-----------------------------------------------------------------------------

;Used globals
;-----------------------------------------------------------------------------
;-----------------------------------------------------------------------------

;Related globals
;-----------------------------------------------------------------------------
;aaZefirosMimicBodySlot
;aaZefirosMimicFootSlot
;aaZefirosMimicHandSlot
;aaZefirosMimicHeadSlot
;aaZefirosMimicLegsSlot
;aaZefirosMimicShldSlot
;-----------------------------------------------------------------------------

;Description
;-----------------------------------------------------------------------------
;Given an array of armor and an array of model/icon paths, checks if paths
;are valid.  If not, resets them to a default.  Returns array of valid paths.
;
;Array:
;[0]Body
;[1]Foot
;[2]Hand
;[3]Head
;[4]Legs
;[5]Shld
;
;Sub-array:
;[0]MaleModel
;[1]FemaleModel
;[2]MaleGround
;[3]FemaleGround
;[4]MaleIcon
;[5]FemaleIcon
;[6]Name
;[7]Slot
;-----------------------------------------------------------------------------

;Parameters
;-----------------------------------------------------------------------------
array_var Armr
array_var MimicData ;Return value

string_var Path
ref Item
;-----------------------------------------------------------------------------

;-----------------------------------------------------------------------------
begin Function { Armr, MimicData }
;-----------------------------------------------------------------------------

	DebugPrint "Validating MimicData..."

	;-----------------------------------------------------------------------------
	;Body
	;-----------------------------------------------------------------------------
	Let Item := Armr[0]
	Let Path := MimicData[0][0]
	SetMaleBipedPath $Path Item
	Let Path := MimicData[0][1]
	SetFemaleBipedPath $Path Item
	Let Path := MimicData[0][2]
	SetMaleGroundPath $Path Item
	Let Path := MimicData[0][3]
	SetFemaleGroundPath $Path Item
	Let Path := MimicData[0][4]
	SetMaleIconPath $Path Item
	Let Path := MimicData[0][5]
	SetFemaleIconPath $Path Item

	if eval( 0 == ( Call aaZefirosValidateBiped Item ) ) || ( 0 == MimicData[0][7] & 4 )

		DebugPrint "MimicBody data invalid, resetting..."
		Let MimicData[0][0] := "Armor\Iron\M\Cuirass.NIF"
		Let MimicData[0][1] := "Armor\Iron\F\Cuirass.NIF"
		Let MimicData[0][2] := "Armor\Iron\M\Cuirass_gnd.NIF"
		Let MimicData[0][3] := "Armor\Iron\F\Cuirass_gnd.NIF"
		Let MimicData[0][4] := "Armor\Iron\M\Cuirass.dds"
		Let MimicData[0][5] := "Armor\Iron\F\Cuirass.dds"
		Let MimicData[0][6] := "Iron (Mimic)"
		Let MimicData[0][7] := 4

	endif
	

	;-----------------------------------------------------------------------------
	;Foot
	;-----------------------------------------------------------------------------
	Let Item := Armr[1]
	Let Path := MimicData[1][0]
	SetMaleBipedPath $Path Item
	Let Path := MimicData[1][1]
	SetFemaleBipedPath $Path Item
	Let Path := MimicData[1][2]
	SetMaleGroundPath $Path Item
	Let Path := MimicData[1][3]
	SetFemaleGroundPath $Path Item
	Let Path := MimicData[1][4]
	SetMaleIconPath $Path Item
	Let Path := MimicData[1][5]
	SetFemaleIconPath $Path Item

	if eval( 0 == ( Call aaZefirosValidateBiped Item ) ) || ( 0 == MimicData[1][7] & 32 )

		DebugPrint "MimicFoot data invalid, resetting..."
		Let MimicData[1][0] := "Armor\Iron\M\Boots.NIF"
		Let MimicData[1][1] := "Armor\Iron\F\Boots.NIF"
		Let MimicData[1][2] := "Armor\Iron\M\Boots_gnd.NIF"
		Let MimicData[1][3] := "Armor\Iron\M\Boots_gnd.NIF"
		Let MimicData[1][4] := "Armor\Iron\M\Boots.dds"
		Let MimicData[1][5] := "Armor\Iron\M\Boots.dds"
		Let MimicData[1][6] := "Iron (Mimic)"
		Let MimicData[1][7] := 32

	endif
	

	;-----------------------------------------------------------------------------
	;Hand
	;-----------------------------------------------------------------------------
	Let Item := Armr[2]
	Let Path := MimicData[2][0]
	SetMaleBipedPath $Path Item
	Let Path := MimicData[2][1]
	SetFemaleBipedPath $Path Item
	Let Path := MimicData[2][2]
	SetMaleGroundPath $Path Item
	Let Path := MimicData[2][3]
	SetFemaleGroundPath $Path Item
	Let Path := MimicData[2][4]
	SetMaleIconPath $Path Item
	Let Path := MimicData[2][5]
	SetFemaleIconPath $Path Item

	if eval( 0 == ( Call aaZefirosValidateBiped Item ) ) || ( 0 == MimicData[2][7] & 16 )

		DebugPrint "MimicHand data invalid, resetting..."
		Let MimicData[2][0] := "Armor\Iron\M\Gauntlets.NIF"
		Let MimicData[2][1] := "Armor\Iron\F\Gauntlets.NIF"
		Let MimicData[2][2] := "Armor\Iron\M\Gauntlets_gnd.NIF"
		Let MimicData[2][3] := "Armor\Iron\M\Gauntlets_gnd.NIF"
		Let MimicData[2][4] := "Armor\Iron\M\Gauntlets.dds"
		Let MimicData[2][5] := "Armor\Iron\F\Gauntlets.dds"
		Let MimicData[2][6] := "Iron (Mimic)"
		Let MimicData[2][7] := 16

	endif
	

	;-----------------------------------------------------------------------------
	;Head
	;-----------------------------------------------------------------------------
	Let Item := Armr[3]
	Let Path := MimicData[3][0]
	SetMaleBipedPath $Path Item
	Let Path := MimicData[3][1]
	SetFemaleBipedPath $Path Item
	Let Path := MimicData[3][2]
	SetMaleGroundPath $Path Item
	Let Path := MimicData[3][3]
	SetFemaleGroundPath $Path Item
	Let Path := MimicData[3][4]
	SetMaleIconPath $Path Item
	Let Path := MimicData[3][5]
	SetFemaleIconPath $Path Item

	if eval( 0 == ( Call aaZefirosValidateBiped Item ) ) || ( 0 == MimicData[3][7] & 3 )

		DebugPrint "MimicHead data invalid, resetting..."
		Let MimicData[3][0] := "Armor\Iron\M\Helmet.NIF"
		Let MimicData[3][1] := "Armor\Iron\M\Helmet.NIF"
		Let MimicData[3][2] := "Armor\Iron\M\Helmet_gnd.NIF"
		Let MimicData[3][3] := "Armor\Iron\M\Helmet_gnd.NIF"
		Let MimicData[3][4] := "Armor\Iron\M\Helmet.dds"
		Let MimicData[3][5] := "Armor\Iron\M\Helmet.dds"
		Let MimicData[3][6] := "Iron (Mimic)"
		Let MimicData[3][7] := 2

	endif
	

	;-----------------------------------------------------------------------------
	;Legs
	;-----------------------------------------------------------------------------
	Let Item := Armr[4]
	Let Path := MimicData[4][0]
	SetMaleBipedPath $Path Item
	Let Path := MimicData[4][1]
	SetFemaleBipedPath $Path Item
	Let Path := MimicData[4][2]
	SetMaleGroundPath $Path Item
	Let Path := MimicData[4][3]
	SetFemaleGroundPath $Path Item
	Let Path := MimicData[4][4]
	SetMaleIconPath $Path Item
	Let Path := MimicData[4][5]
	SetFemaleIconPath $Path Item

	if eval( 0 == ( Call aaZefirosValidateBiped Item ) ) || ( 0 == MimicData[4][7] & 8 )

		DebugPrint "MimicLegs data invalid, resetting..."
		Let MimicData[4][0] := "Armor\Iron\M\Greaves.NIF"
		Let MimicData[4][1] := "Armor\Iron\F\Greaves.NIF"
		Let MimicData[4][2] := "Armor\Iron\M\Greaves_gnd.NIF"
		Let MimicData[4][3] := "Armor\Iron\M\Greaves_gnd.NIF"
		Let MimicData[4][4] := "Armor\Iron\M\Greaves.dds"
		Let MimicData[4][5] := "Armor\Iron\F\Greaves.dds"
		Let MimicData[4][6] := "Iron (Mimic)"
		Let MimicData[4][7] := 8

	endif
	

	;-----------------------------------------------------------------------------
	;Shld
	;-----------------------------------------------------------------------------
	Let Item := Armr[5]
	Let Path := MimicData[5][0]
	SetMaleBipedPath $Path Item
	Let Path := MimicData[5][1]
	SetFemaleBipedPath $Path Item
	Let Path := MimicData[5][2]
	SetMaleGroundPath $Path Item
	Let Path := MimicData[5][3]
	SetFemaleGroundPath $Path Item
	Let Path := MimicData[5][4]
	SetMaleIconPath $Path Item
	Let Path := MimicData[5][5]
	SetFemaleIconPath $Path Item

	if eval( 0 == ( Call aaZefirosValidateBiped Item ) ) || ( 0 == MimicData[5][7] & 8192 )

		DebugPrint "MimicShld data invalid, resetting..."
		Let MimicData[5][0] := "Armor\Iron\Shield.NIF"
		Let MimicData[5][1] := "Armor\Iron\Shield.NIF"
		Let MimicData[5][2] := "Armor\Iron\Shield.NIF"
		Let MimicData[5][3] := "Armor\Iron\Shield.NIF"
		Let MimicData[5][4] := "Armor\Iron\Shield.dds"
		Let MimicData[5][5] := "Armor\Iron\Shield.dds"
		Let MimicData[5][6] := "Iron (Mimic)"
		Let MimicData[5][7] := 8192

	endif
	

	DebugPrint "MimicData validated."
	sv_Destruct Path
	SetFunctionValue MimicData
	Return
;-----------------------------------------------------------------------------
end ;Function { Armr, MimicData }
;-----------------------------------------------------------------------------