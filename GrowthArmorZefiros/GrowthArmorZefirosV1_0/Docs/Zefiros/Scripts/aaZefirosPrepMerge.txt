scn aaZefirosPrepMerge

;Main script
;-----------------------------------------------------------------------------
;aaZefirosManager
;-----------------------------------------------------------------------------

;Used scripts
;-----------------------------------------------------------------------------
;-----------------------------------------------------------------------------

;Related scripts
;-----------------------------------------------------------------------------
;-----------------------------------------------------------------------------

;Used globals
;-----------------------------------------------------------------------------
;-----------------------------------------------------------------------------

;Related globals
;-----------------------------------------------------------------------------
;aaZefirosSlotBody
;aaZefirosSlotFoot
;aaZefirosSlotHand
;aaZefirosSlotHead
;aaZefirosSlotLegs
;aaZefirosSlotShld
;-----------------------------------------------------------------------------

;Description
;-----------------------------------------------------------------------------
;Checks if any items are merged according to the slot masks and returns them
;to the Player in preparation for calling SetMerge.
;
;Array:
;[0]Body
;[1]Foot
;[2]Hand
;[3]Head
;[4]Legs
;[5]Shld
;-----------------------------------------------------------------------------

;Parameters
;-----------------------------------------------------------------------------
array_var Armr
array_var Mask

ref Item
;-----------------------------------------------------------------------------

;-----------------------------------------------------------------------------
begin Function { Mask, Armr }
;-----------------------------------------------------------------------------

	DebugPrint "Checking for missing items needed for merging..."

	;Add Body
	if eval( Mask[1] & 4 || Mask[2] & 4 || Mask[3] & 4 || Mask[4] & 4 || Mask[5] & 4 )

		Let Item := Armr[0]
		Player.AddItemNS Item 1
		DebugPrint "Returned %n." Item

	endif

	;Add Foot
	if eval( Mask[0] & 32 || Mask[2] & 32 || Mask[3] & 32 || Mask[4] & 32 || Mask[5] & 32 )

		Let Item := Armr[1]
		Player.AddItemNS Item 1
		DebugPrint "Returned %n." Item

	endif

	;Add Hand
	if eval( Mask[1] & 16 || Mask[0] & 16 || Mask[3] & 16 || Mask[4] & 16 || Mask[5] & 16 )

		Let Item := Armr[2]
		Player.AddItemNS Item 1
		DebugPrint "Returned %n." Item

	endif

	;Add Head
	if eval( Mask[1] & 2 || Mask[2] & 2 || Mask[0] & 2 || Mask[4] & 2 || Mask[5] & 2 || Mask[1] & 1 || Mask[2] & 1 || Mask[0] & 1 || Mask[4] & 1 || Mask[5] & 1 )

		Let Item := Armr[3]
		Player.AddItemNS Item 1
		DebugPrint "Returned %n." Item

	endif

	;Add Legs
	if eval( Mask[1] & 8 || Mask[2] & 8 || Mask[3] & 8 || Mask[0] & 8 || Mask[5] & 8 )

		Let Item := Armr[4]
		Player.AddItemNS Item 1
		DebugPrint "Returned %n." Item

	endif

	;Add Shld
	if eval( Mask[1] & 8192 || Mask[2] & 8192 || Mask[3] & 8192 || Mask[4] & 8192 || Mask[0] & 8192 )

		Let Item := Armr[5]
		Player.AddItemNS Item 1
		DebugPrint "Returned %n." Item

	endif


	DebugPrint "Missing items returned."
	Return
;-----------------------------------------------------------------------------
end ;Function { }
;-----------------------------------------------------------------------------