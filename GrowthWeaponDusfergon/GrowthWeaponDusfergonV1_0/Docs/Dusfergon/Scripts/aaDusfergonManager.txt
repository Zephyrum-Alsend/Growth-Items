scn aaDusfergonManager
float fQuestDelayTime
float ScriptLag

;Related scripts
;-----------------------------------------------------------------------------
;aaDusfergonObject
;aaDusfergonOnHit
;aaDusfergonOnEnchant
;aaDusfergonSetModel
;aaDusfergonCalcXPReq
;aaDusfergonIncrVal
;-----------------------------------------------------------------------------

;Related globals
;-----------------------------------------------------------------------------
;aaDusfergonCombatXPLog
;aaDusfergonCombatXPStart
;aaDusfergonEnch
;aaDusfergonEnch1
;aaDusfergonEnch2
;aaDusfergonEnch3
;aaDusfergonEnch4
;aaDusfergonEnch5
;aaDusfergonEquip
;aaDusfergonLevel
;aaDusfergonModel
;aaDusfergonXP
;aaDusfergonXPReq
;-----------------------------------------------------------------------------

;Description
;-----------------------------------------------------------------------------
;Main script of Dusfergon.  Handles all stats and core functionality.
;
;When a save is loaded, looks at all globals and the .ini to set weapon's 
;model, type, stats, enchantment, event handler and XPReq.  Both a console
;message and weapon equip sound will happen when everything is initialized.
;
;Upon combat end, log XP gained from said combat to console.
;
;When halfway to the next level, display a flavor message in the upper left
;of the screen.  If level is capped, display a message box stating so.
;
;When XP >= XPReq, execute level up.  Level up increments all stats by the 
;values contained in %Mult variables.  If the level is past the EnchStart 
;level, prompt the player to choose an enchant option and apply it. Every 
;EnchLevel after EnchStart, ask the player to choose an option again. The 
;player can choose to keep growing their current enchantment, start growing a 
;new one, or continue growing an old one.  Set new XPReq.  A message will 
;appear in the upper left of the screen whenever a level up happens.
;
;While the player is in their inventory, right-clicking the weapon will prompt
;the player to change it's model and type.  If the player Ctrl+RMBs the weapon
;it will display all enchantment effects and the active enchantment.
;These menus and changes all occur within the inventory menu, no need to to
;exit to GameMode.
;-----------------------------------------------------------------------------

;Parameters
;-----------------------------------------------------------------------------
;Weapon variables
;-----------------------------------------------------------------------------
short sDamageBase
float fSpeedBase
float fReachBase
float fWeightBase
short sHealthBase
long lValueBase

float fDamageMult
float fSpeedMult
float fReachMult
float fWeightMult
float fHealthMult
float fValueMult

short Damage
float Speed
float Reach
float Weight
short Health
long Value

;-----------------------------------------------------------------------------
;Sub-type adjustment variables
;-----------------------------------------------------------------------------
short sClaymoreDamageBase
float fClaymoreSpeedBase
float fClaymoreReachBase

float fClaymoreDamageMult
float fClaymoreSpeedMult
float fClaymoreReachMult

short sBastard2HDamageBase
float fBastard2HSpeedBase
float fBastard2HReachBase

float fBastard2HDamageMult
float fBastard2HSpeedMult
float fBastard2HReachMult

short sBastard1HDamageBase
float fBastard1HSpeedBase
float fBastard1HReachBase

float fBastard1HDamageMult
float fBastard1HSpeedMult
float fBastard1HReachMult

short sLongswordDamageBase
float fLongswordSpeedBase
float fLongswordReachBase

float fLongswordDamageMult
float fLongswordSpeedMult
float fLongswordReachMult

short sShortswordDamageBase
float fShortswordSpeedBase
float fShortswordReachBase

float fShortswordDamageMult
float fShortswordSpeedMult
float fShortswordReachMult

short sDaggerDamageBase
float fDaggerSpeedBase
float fDaggerReachBase

float fDaggerDamageMult
float fDaggerSpeedMult
float fDaggerReachMult

short sWarhammerDamageBase
float fWarhammerSpeedBase
float fWarhammerReachBase

float fWarhammerDamageMult
float fWarhammerSpeedMult
float fWarhammerReachMult

short sBattleaxeDamageBase
float fBattleaxeSpeedBase
float fBattleaxeReachBase

float fBattleaxeDamageMult
float fBattleaxeSpeedMult
float fBattleaxeReachMult

short sMaceDamageBase
float fMaceSpeedBase
float fMaceReachBase

float fMaceDamageMult
float fMaceSpeedMult
float fMaceReachMult

short sWaraxeDamageBase
float fWaraxeSpeedBase
float fWaraxeReachBase

float fWaraxeDamageMult
float fWaraxeSpeedMult
float fWaraxeReachMult

short AdjDamageBase
float AdjSpeedBase
float AdjReachBase

float AdjDamageMult
float AdjSpeedMult
float AdjReachMult

;-----------------------------------------------------------------------------
;Enchantment variables
;-----------------------------------------------------------------------------		
short sEnchStart
short sEnchLevel

short sELDGMagnBase
short sELDGAreaBase
short sELDGDuraBase
float fELDGCostBase

float fELDGMagnMult
float fELDGAreaMult
float fELDGDuraMult
float fELDGCostMult

short sWKELMagnBase
short sWKELAreaBase
short sWKELDuraBase
float fWKELCostBase

float fWKELMagnMult
float fWKELAreaMult
float fWKELDuraMult
float fWKELCostMult

short sWKMAMagnBase
short sWKMAAreaBase
short sWKMADuraBase
float fWKMACostBase

float fWKMAMagnMult
float fWKMAAreaMult
float fWKMADuraMult
float fWKMACostMult

short sDGFAMagnBase
short sDGFAAreaBase
short sDGFADuraBase
float fDGFACostBase

float fDGFAMagnMult
float fDGFAAreaMult
float fDGFADuraMult
float fDGFACostMult

short sDIWEMagnBase
short sDIWEAreaBase
short sDIWEDuraBase
float fDIWECostBase

float fDIWEMagnMult
float fDIWEAreaMult
float fDIWEDuraMult
float fDIWECostMult

short sDIARMagnBase
short sDIARAreaBase
short sDIARDuraBase
float fDIARCostBase

float fDIARMagnMult
float fDIARAreaMult
float fDIARDuraMult
float fDIARCostMult

short sDGSPMagnBase
short sDGSPAreaBase
short sDGSPDuraBase
float fDGSPCostBase

float fDGSPMagnMult
float fDGSPAreaMult
float fDGSPDuraMult
float fDGSPCostMult

short sDSPLMagnBase
short sDSPLAreaBase
float fDSPLCostBase

float fDSPLMagnMult
float fDSPLAreaMult
float fDSPLCostMult

short sSLNCAreaBase
short sSLNCDuraBase
float fSLNCCostBase

float fSLNCAreaMult
float fSLNCDuraMult
float fSLNCCostMult

long lChargeBase
float fChargeMult

long Magnitude
long Area
long Duration
float Cost
long Charge

short WKMALv

short EnchSelect
short EnchIndex
short EnchIter
string_var EffName
string_var EffActv

short WarnOnce

;-----------------------------------------------------------------------------
;Level Up variables
;-----------------------------------------------------------------------------
short sXPReqBase
short sXPReqMult
short sLevelCap

short CombatXP
short XPReqHalf
float Rando
short HalfOnce

;-----------------------------------------------------------------------------
;Form Change variables
;-----------------------------------------------------------------------------
short ModelChange
short Button
short IndexOffset

;-----------------------------------------------------------------------------
;RefID of ObjectID and EnchantID
;-----------------------------------------------------------------------------
ref self
ref ench







;-----------------------------------------------------------------------------
begin GameMode
;-----------------------------------------------------------------------------

	;-----------------------------------------------------------------------------
	;Initializer sub-block
	;-----------------------------------------------------------------------------
	if GetGameLoaded
	;-----------------------------------------------------------------------------

		;-----------------------------------------------------------------------------
		;Minimize the delay time to increase responsiveness
		;-----------------------------------------------------------------------------
		Set ScriptLag to 0.01

		if ( fQuestDelayTime != ScriptLag )
	
			Set fQuestDelayTime to ScriptLag
	
		endif

		;-----------------------------------------------------------------------------
		;Initialize variables
		;-----------------------------------------------------------------------------
		Set self to DLScalar3
		Set ench to DLScalar3Ench

		Set WarnOnce to 0
		RunBatchScript "Data\ini\Dusfergon.ini"
		
		;-----------------------------------------------------------------------------
		;Add to Player on first start up
		;-----------------------------------------------------------------------------
		if ( aaDusfergonLevel == 0 )

			Player.AddItem self 1
			Set aaDusfergonLevel to 1

		endif

		;-----------------------------------------------------------------------------
		;Set stat adjustments
		;-----------------------------------------------------------------------------
		if ( aaDusfergonModel < 10 )

			Set AdjDamageBase to sClaymoreDamageBase
			Set AdjSpeedBase to fClaymoreSpeedBase
			Set AdjReachBase to fClaymoreReachBase

			Set AdjDamageMult to fClaymoreDamageMult
			Set AdjSpeedMult to fClaymoreSpeedMult
			Set AdjReachMult to fClaymoreReachMult

		elseif ( aaDusfergonModel < 20 )

			Set AdjDamageBase to sBastard2HDamageBase
			Set AdjSpeedBase to fBastard2HSpeedBase
			Set AdjReachBase to fBastard2HReachBase

			Set AdjDamageMult to fBastard2HDamageMult
			Set AdjSpeedMult to fBastard2HSpeedMult
			Set AdjReachMult to fBastard2HReachMult

		elseif ( aaDusfergonModel < 30 )

			Set AdjDamageBase to sBastard1HDamageBase
			Set AdjSpeedBase to fBastard1HSpeedBase
			Set AdjReachBase to fBastard1HReachBase

			Set AdjDamageMult to fBastard1HDamageMult
			Set AdjSpeedMult to fBastard1HSpeedMult
			Set AdjReachMult to fBastard1HReachMult

		elseif ( aaDusfergonModel < 40 )
			
			Set AdjDamageBase to sLongswordDamageBase
			Set AdjSpeedBase to fLongswordSpeedBase
			Set AdjReachBase to fLongswordReachBase

			Set AdjDamageMult to fLongswordDamageMult
			Set AdjSpeedMult to fLongswordSpeedMult
			Set AdjReachMult to fLongswordReachMult

		elseif ( aaDusfergonModel < 50 )

			Set AdjDamageBase to sShortswordDamageBase
			Set AdjSpeedBase to fShortswordSpeedBase
			Set AdjReachBase to fShortswordReachBase

			Set AdjDamageMult to fShortswordDamageMult
			Set AdjSpeedMult to fShortswordSpeedMult
			Set AdjReachMult to fShortswordReachMult

		elseif ( aaDusfergonModel < 60 )

			Set AdjDamageBase to sDaggerDamageBase
			Set AdjSpeedBase to fDaggerSpeedBase
			Set AdjReachBase to fDaggerReachBase

			Set AdjDamageMult to fDaggerDamageMult
			Set AdjSpeedMult to fDaggerSpeedMult
			Set AdjReachMult to fDaggerReachMult

		elseif ( aaDusfergonModel < 70 )

			Set AdjDamageBase to sWarhammerDamageBase
			Set AdjSpeedBase to fWarhammerSpeedBase
			Set AdjReachBase to fWarhammerReachBase

			Set AdjDamageMult to fWarhammerDamageMult
			Set AdjSpeedMult to fWarhammerSpeedMult
			Set AdjReachMult to fWarhammerReachMult

		elseif ( aaDusfergonModel < 80 )

			Set AdjDamageBase to sBattleaxeDamageBase
			Set AdjSpeedBase to fBattleaxeSpeedBase
			Set AdjReachBase to fBattleaxeReachBase

			Set AdjDamageMult to fBattleaxeDamageMult
			Set AdjSpeedMult to fBattleaxeSpeedMult
			Set AdjReachMult to fBattleaxeReachMult

		elseif ( aaDusfergonModel < 90 )

			Set AdjDamageBase to sMaceDamageBase
			Set AdjSpeedBase to fMaceSpeedBase
			Set AdjReachBase to fMaceReachBase

			Set AdjDamageMult to fMaceDamageMult
			Set AdjSpeedMult to fMaceSpeedMult
			Set AdjReachMult to fMaceReachMult

		elseif ( aaDusfergonModel < 100 )

			Set AdjDamageBase to sWaraxeDamageBase
			Set AdjSpeedBase to fWaraxeSpeedBase
			Set AdjReachBase to fWaraxeReachBase

			Set AdjDamageMult to fWaraxeDamageMult
			Set AdjSpeedMult to fWaraxeSpeedMult
			Set AdjReachMult to fWaraxeReachMult

		;Safeguard incase junk data gets into aaDusfergonModel
		else

			Set AdjDamageBase to 0
			Set AdjSpeedBase to 0
			Set AdjReachBase to 0

			Set AdjDamageMult to 0
			Set AdjSpeedMult to 0
			Set AdjReachMult to 0

		endif

		;-----------------------------------------------------------------------------
		;Set weapon stats
		;-----------------------------------------------------------------------------
		Set Damage to ( sDamageBase + AdjDamageBase ) + ( ( fDamageMult + AdjDamageMult ) * ( aaDusfergonLevel - 1 ) )
		Set Speed to ( fSpeedBase + AdjSpeedBase ) + ( ( fSpeedMult + AdjSpeedMult ) * ( aaDusfergonLevel - 1 ) )
		Set Reach to ( fReachBase + AdjReachBase ) + ( ( fReachMult + AdjReachMult ) * ( aaDusfergonLevel - 1 ) )
		Set Weight to fWeightBase + ( fWeightMult * ( aaDusfergonLevel - 1 ) )
		Set Health to sHealthBase + ( fHealthMult * ( aaDusfergonLevel - 1 ) )
		Set Value to lValueBase + ( fValueMult * ( aaDusfergonLevel - 1 ) )

		SetAttackDamage Damage self
		SetWeaponSpeed Speed self
		SetWeaponReach Reach self
		SetWeight Weight self
		SetObjectHealth Health self
		SetGoldValue_T Value self
		;GoldValue is stored in the save game, _T makes it not, like everything else

		;-----------------------------------------------------------------------------
		;Set enchantment stats
		;-----------------------------------------------------------------------------
		;Purge effects from previous load game
		RemoveAllEffectItems ench
		RemoveEnchantment self

		Set Charge to lChargeBase + ( fChargeMult * ( aaDusfergonLevel - 1 ) )
		Set Cost to 0
		Set WKMALv to 0
		Set EnchIndex to 0
		
		;-----------------------------------------------------------------------------
		;Fire option
		;-----------------------------------------------------------------------------
		if ( aaDusfergonEnch1 > 0 || aaDusfergonEnch == 1 )

			Set Magnitude to sELDGMagnBase + ( fELDGMagnMult * aaDusfergonEnch1 )
			Set Area to sELDGAreaBase + ( fELDGAreaMult * aaDusfergonEnch1 )
			Set Duration to sELDGDuraBase + ( fELDGDuraMult * aaDusfergonEnch1 )
			Set Cost to Cost + fELDGCostBase + ( fELDGCostMult * aaDusfergonEnch1 )
			
			AddFullEffectItem FIDG Magnitude Area Duration 1 ench

			Set Magnitude to sWKELMagnBase + ( fWKELMagnMult * aaDusfergonEnch1 )
			Set Area to sWKELAreaBase + ( fWKELAreaMult * aaDusfergonEnch1 )
			Set Duration to sWKELDuraBase + ( fWKELDuraMult * aaDusfergonEnch1 )
			Set Cost to Cost + fWKELCostBase + ( fWKELCostMult * aaDusfergonEnch1 )

			AddFullEffectItem WKFI Magnitude Area Duration 1 ench

			Set WKMALv to 1
			Set EnchIndex to ( EnchIndex + 2 )
			
		endif
		
		;-----------------------------------------------------------------------------
		;Ice option
		;-----------------------------------------------------------------------------
		if ( aaDusfergonEnch2 > 0 || aaDusfergonEnch == 2 )

			Set Magnitude to sELDGMagnBase + ( fELDGMagnMult * aaDusfergonEnch2 )
			Set Area to sELDGAreaBase + ( fELDGAreaMult * aaDusfergonEnch2 )
			Set Duration to sELDGDuraBase + ( fELDGDuraMult * aaDusfergonEnch2 )
			Set Cost to Cost + fELDGCostBase + ( fELDGCostMult * aaDusfergonEnch2 )

			AddFullEffectItem FRDG Magnitude Area Duration 1 ench

			Set Magnitude to sWKELMagnBase + ( fWKELMagnMult * aaDusfergonEnch2 )
			Set Area to sWKELAreaBase + ( fWKELAreaMult * aaDusfergonEnch2 )
			Set Duration to sWKELDuraBase + ( fWKELDuraMult * aaDusfergonEnch2 )
			Set Cost to Cost + fWKELCostBase + ( fWKELCostMult * aaDusfergonEnch2 )

			AddFullEffectItem WKFR Magnitude Area Duration 1 ench

			Set WKMALv to 1
			Set EnchIndex to ( EnchIndex + 2 )
			
		endif

		;-----------------------------------------------------------------------------
		;Volt option
		;-----------------------------------------------------------------------------
		if ( aaDusfergonEnch3 > 0 || aaDusfergonEnch == 3 )

			Set Magnitude to sELDGMagnBase + ( fELDGMagnMult * aaDusfergonEnch3 )
			Set Area to sELDGAreaBase + ( fELDGAreaMult * aaDusfergonEnch3 )
			Set Duration to sELDGDuraBase + ( fELDGDuraMult * aaDusfergonEnch3 )
			Set Cost to Cost + fELDGCostBase + ( fELDGCostMult * aaDusfergonEnch3 )

			AddFullEffectItem SHDG Magnitude Area Duration 1 ench

			Set Magnitude to sWKELMagnBase + ( fWKELMagnMult * aaDusfergonEnch3 )
			Set Area to sWKELAreaBase + ( fWKELAreaMult * aaDusfergonEnch3 )
			Set Duration to sWKELDuraBase + ( fWKELDuraMult * aaDusfergonEnch3 )
			Set Cost to Cost + fWKELCostBase + ( fWKELCostMult * aaDusfergonEnch3 )

			AddFullEffectItem WKSH Magnitude Area Duration 1 ench

			Set WKMALv to 1
			Set EnchIndex to ( EnchIndex + 2 )

		endif

		;-----------------------------------------------------------------------------
		;Knight-Slayer option
		;-----------------------------------------------------------------------------
		if ( aaDusfergonEnch4 > 0 || aaDusfergonEnch == 4 )

			Set Magnitude to sDGFAMagnBase + ( fDGFAMagnMult * aaDusfergonEnch4 )
			Set Area to sDGFAAreaBase + ( fDGFAAreaMult * aaDusfergonEnch4 )
			Set Duration to sDGFADuraBase + ( fDGFADuraMult * aaDusfergonEnch4 )
			Set Cost to Cost + fDGFACostBase + ( fDGFACostMult * aaDusfergonEnch4 )

			AddFullEffectItem DGFA Magnitude Area Duration 1 ench

			Set Magnitude to sDIWEMagnBase + ( fDIWEMagnMult * aaDusfergonEnch4 )
			Set Area to sDIWEAreaBase + ( fDIWEAreaMult * aaDusfergonEnch4 )
			Set Duration to sDIWEDuraBase + ( fDIWEDuraMult * aaDusfergonEnch4 )
			Set Cost to Cost + fDIWECostBase + ( fDIWECostMult * aaDusfergonEnch4 )

			AddFullEffectItem DIWE Magnitude Area Duration 1 ench

			Set Magnitude to sDIARMagnBase + ( fDIARMagnMult * aaDusfergonEnch4 )
			Set Area to sDIARAreaBase + ( fDIARAreaMult * aaDusfergonEnch4 )
			Set Duration to sDIARDuraBase + ( fDIARDuraMult * aaDusfergonEnch4 )
			Set Cost to Cost + fDIARCostBase + ( fDIARCostMult * aaDusfergonEnch4 )

			AddFullEffectItem DIAR Magnitude Area Duration 1 ench

			Set EnchIndex to ( EnchIndex + 3 )
			
		endif	
		
		;-----------------------------------------------------------------------------
		;Mage-Slayer option
		;-----------------------------------------------------------------------------
		if ( aaDusfergonEnch5 > 0 || aaDusfergonEnch == 5 )

			Set Magnitude to sDGSPMagnBase + ( fDGSPMagnMult * aaDusfergonEnch5 )
			Set Area to sDGSPAreaBase + ( fDGSPAreaMult * aaDusfergonEnch5 )
			Set Duration to sDGSPDuraBase + ( fDGSPDuraMult * aaDusfergonEnch5 )
			Set Cost to Cost + fDGSPCostBase + ( fDGSPCostMult * aaDusfergonEnch5 )

			AddFullEffectItem DGSP Magnitude Area Duration 1 ench

			Set Magnitude to sDSPLMagnBase + ( fDSPLMagnMult * aaDusfergonEnch5 )
			Set Area to sDSPLAreaBase + ( fDSPLAreaMult * aaDusfergonEnch5 )
			Set Duration to 0
			Set Cost to Cost + fDSPLCostBase + ( fDSPLCostMult * aaDusfergonEnch5 )

			AddFullEffectItem DSPL Magnitude Area Duration 1 ench

			Set Magnitude to 0
			Set Area to sSLNCAreaBase + ( fSLNCAreaMult * aaDusfergonEnch5 )
			Set Duration to sSLNCDuraBase + ( fSLNCDuraMult * aaDusfergonEnch5 )
			Set Cost to Cost + fSLNCCostBase + ( fSLNCCostMult * aaDusfergonEnch5 )

			AddFullEffectItem SLNC Magnitude Area Duration 1 ench

			Set EnchIndex to ( EnchIndex + 3 )
			
		endif

		;-----------------------------------------------------------------------------
		;Append Weakness to Magic
		;-----------------------------------------------------------------------------
		if ( WKMALv > 0 )

			Set WKMALv to 0
			
			if ( aaDusfergonEnch1 > 0 || aaDusfergonEnch == 1 )

				Set WKMALv to WKMALv + aaDusfergonEnch1
				
			endif

			if ( aaDusfergonEnch2 > 0 || aaDusfergonEnch == 2 )

				Set WKMALv to WKMALv + aaDusfergonEnch2

			endif

			if ( aaDusfergonEnch3 > 0 || aaDusfergonEnch == 3 )

				Set WKMALv to WKMALv + aaDusfergonEnch3
				
			endif

			Set Magnitude to sWKMAMagnBase + ( fWKMAMagnMult * WKMALv )
			Set Area to sWKMAAreaBase + ( fWKMAAreaMult * WKMALv )
			Set Duration to sWKMADuraBase + ( fWKMADuraMult * WKMALv )
			Set Cost to Cost + fWKMACostBase + ( fWKMACostMult * WKMALv )

			AddFullEffectItem WKMA Magnitude Area Duration 1 ench
			
			Set EnchIndex to ( EnchIndex + 1 )

		endif

		;-----------------------------------------------------------------------------
		;Set enchantment
		;-----------------------------------------------------------------------------
		if ( GetMagicItemEffectCount ench > 0 )

			SetObjectCharge Charge self
			SetEnchantmentCost Cost ench
			SetEnchantment ench self

		endif

		Set EnchSelect to 0
		
		;-----------------------------------------------------------------------------
		;Set XPReq
		;-----------------------------------------------------------------------------
		;XPReq is changed within the function
		Set XPReqHalf to Call aaDusfergonCalcXPReq sXPReqBase sXPReqMult XPReqHalf

		if ( aaDusfergonLevel < sLevelCap )

			Set HalfOnce to 0

		else

			Set HalfOnce to 1

		endif

		;-----------------------------------------------------------------------------
		;Set model and weapon type
		;-----------------------------------------------------------------------------
		;Resets handler if equipped, since has to be re-equipped to refresh model
		Call aaDusfergonSetModel self
		
		Set ModelChange to 0

		;Removes handler from previous load game
		if ( aaDusfergonEquip == 0 )

			RemoveEventHandler "OnHitWith" aaDusfergonOnHit "object"::self
			
		endif

		;-----------------------------------------------------------------------------
		printc "%n initialized!" self
		;-----------------------------------------------------------------------------

	;-----------------------------------------------------------------------------
	endif ;GetGameLoaded
	;-----------------------------------------------------------------------------





	
	;-----------------------------------------------------------------------------
	;Log XP gained from most recent combat encounter to console
	;-----------------------------------------------------------------------------
	if ( Player.IsInCombat == 0 && aaDusfergonCombatXPLog == 1 )

		Set CombatXP to aaDusfergonXP - aaDusfergonCombatXPStart
		printc "%4.0f/%4.0f  +%2.0fXP" aaDusfergonXP aaDusfergonXPReq CombatXP
		Set aaDusfergonCombatXPLog to 0

	endif





	
	;-----------------------------------------------------------------------------
	;Level up sub-blocks
	;-----------------------------------------------------------------------------

	if ( EnchSelect == 2 )

		Set Button to GetButtonPressed

	endif

	;-----------------------------------------------------------------------------
	;Open enchant option menu when not in combat
	;-----------------------------------------------------------------------------	
	if ( Player.IsInCombat == 0 && EnchSelect == 1 )

		MessageBoxEx "%n seeks an enchantment:|Fire|Ice|Volt|Knight-Slayer|Mage-Slayer" self
		Set Button to -1
		Set EnchSelect to 2

	endif

	;-----------------------------------------------------------------------------
	;Set enchant option
	;-----------------------------------------------------------------------------	
	if ( EnchSelect == 2 && Button > -1 )

		Set aaDusfergonEnch to ( Button + 1 )

		;-----------------------------------------------------------------------------
		;Initialize enchant option if necessary
		;-----------------------------------------------------------------------------

		;-----------------------------------------------------------------------------
		;Ensure Weakness to Magic is always last
		;-----------------------------------------------------------------------------
		if ( MagicItemHasEffect WKMA ench )

			Set EnchIter to ( EnchIndex - 1 )
					
			Set Magnitude to GetNthEffectItemMagnitude ench EnchIter
			Set Area to GetNthEffectItemArea ench EnchIter
			Set Duration to GetNthEffectItemDuration ench EnchIter

			RemoveNthEffectItem ench EnchIter

			Set WKMALv to 1

		else

			Set WKMALv to 0

		endif

		;-----------------------------------------------------------------------------
		;Fire option
		;-----------------------------------------------------------------------------
		if ( aaDusfergonEnch == 1 )
		;-----------------------------------------------------------------------------
			if ( aaDusfergonEnch1 == 0 )

				if ( WKMALv == 0 )

					Set Magnitude to sWKMAMagnBase
					Set Area to sWKMAAreaBase
					Set Duration to sWKMADuraBase
					
					Set Cost to Cost + fWKMACostBase
					Set EnchIndex to ( EnchIndex + 1 )

					Set WKMALv to 1

				endif

				AddFullEffectItem FIDG sELDGMagnBase sELDGAreaBase sELDGDuraBase 1 ench
				AddFullEffectItem WKFI sWKELMagnBase sWKELAreaBase sWKELDuraBase 1 ench
				Set Cost to Cost + ( fELDGCostBase + fWKELCostBase )
				Set EnchIndex to ( EnchIndex + 2 )
				
			endif

		;-----------------------------------------------------------------------------
		;Ice option
		;-----------------------------------------------------------------------------
		elseif ( aaDusfergonEnch == 2 )
		;-----------------------------------------------------------------------------
			if ( aaDusfergonEnch2 == 0 )

				if ( WKMALv == 0 )

					Set Magnitude to sWKMAMagnBase
					Set Area to sWKMAAreaBase
					Set Duration to sWKMADuraBase
					
					Set Cost to Cost + fWKMACostBase
					Set EnchIndex to ( EnchIndex + 1 )

					Set WKMALv to 1

				endif

				AddFullEffectItem FRDG sELDGMagnBase sELDGAreaBase sELDGDuraBase 1 ench
				AddFullEffectItem WKFR sWKELMagnBase sWKELAreaBase sWKELDuraBase 1 ench
				Set Cost to Cost + ( fELDGCostBase + fWKELCostBase )
				Set EnchIndex to ( EnchIndex + 2 )
				
			endif
			
		;-----------------------------------------------------------------------------
		;Volt option
		;-----------------------------------------------------------------------------
		elseif ( aaDusfergonEnch == 3 )
		;-----------------------------------------------------------------------------
			if ( aaDusfergonEnch3 == 0 )

				if ( WKMALv == 0 )

					Set Magnitude to sWKMAMagnBase
					Set Area to sWKMAAreaBase
					Set Duration to sWKMADuraBase
					
					Set Cost to Cost + fWKMACostBase
					Set EnchIndex to ( EnchIndex + 1 )

					Set WKMALv to 1

				endif

				AddFullEffectItem SHDG sELDGMagnBase sELDGAreaBase sELDGDuraBase 1 ench
				AddFullEffectItem WKSH sWKELMagnBase sWKELAreaBase sWKELDuraBase 1 ench
				Set Cost to Cost + ( fELDGCostBase + fWKELCostBase )
				Set EnchIndex to ( EnchIndex + 2 )
				
			endif

		;-----------------------------------------------------------------------------
		;Knight-Slayer option
		;-----------------------------------------------------------------------------
		elseif ( aaDusfergonEnch == 4 )
		;-----------------------------------------------------------------------------
			if ( aaDusfergonEnch4 == 0 )

				AddFullEffectItem DGFA sDGFAMagnBase sDGFAAreaBase sDGFADuraBase 1 ench
				AddFullEffectItem DIWE sDIWEMagnBase sDIWEAreaBase sDIWEDuraBase 1 ench
				AddFullEffectItem DIAR sDIARMagnBase sDIARAreaBase sDIARDuraBase 1 ench
				Set Cost to Cost + ( fDGFACostBase + fDIWECostBase + fDIARCostBase )
				Set EnchIndex to ( EnchIndex + 3 )

			endif

		;-----------------------------------------------------------------------------
		;Mage-Slayer option
		;-----------------------------------------------------------------------------
		elseif ( aaDusfergonEnch == 5 )
		;-----------------------------------------------------------------------------
			if ( aaDusfergonEnch5 == 0 )

				AddFullEffectItem DGSP sDGSPMagnBase sDGFAAreaBase sDGFADuraBase 1 ench
				AddFullEffectItem DSPL sDSPLMagnBase sDSPLAreaBase 0 1 ench
				AddFullEffectItem SLNC 0 sSLNCAreaBase sSLNCDuraBase 1 ench
				Set Cost to Cost + ( fDGSPCostBase + fDSPLCostBase + fSLNCCostBase )
				Set EnchIndex to ( EnchIndex + 3 )

			endif
			
		;-----------------------------------------------------------------------------
		endif ;( aaDusfergonEnch != 0 )
		;-----------------------------------------------------------------------------

		;-----------------------------------------------------------------------------
		;Append Weakness to Magic
		;-----------------------------------------------------------------------------
		if ( WKMALv > 0 )

			AddFullEffectItem WKMA Magnitude Area Duration 1 ench

		endif
		
		SetEnchantmentCost Cost ench
		SetEnchantment ench self
		Set EnchSelect to 0

	;-----------------------------------------------------------------------------
	endif ;( EnchSelect == 2 && Button > -1 )
	;-----------------------------------------------------------------------------


	
	;-----------------------------------------------------------------------------
	;Half way and level cap messages
	;-----------------------------------------------------------------------------
	if ( HalfOnce == 0 && EnchSelect < 2 )
		
		if ( aaDusfergonLevel >= sLevelCap )

			MessageBoxEx "%n has reached its apex." self

		elseif ( aaDusfergonXP >= XPReqHalf )

			Set Rando to rand 0 1

			if ( Rando < 0.15 )

				MessageEX "%n sharpens on your foe..." self
	
			elseif ( Rando < 0.35 )
	
				MessageEX "%n stirs..." self
	
			elseif ( Rando < 0.60 )
	
				MessageEX "%n rattles faintly..." self
	
			elseif ( Rando < 0.75 )
	
				MessageEX "%n quenches in your foe..." self
	
			else
	
				MessageEX "%n gathers magicka..." self
	
			endif

		endif

		Set HalfOnce to 1

	endif


	
	;-----------------------------------------------------------------------------
	;Level up weapon and enchantment
	;-----------------------------------------------------------------------------
	while ( aaDusfergonLevel < sLevelCap && aaDusfergonXP >= aaDusfergonXPReq && EnchSelect == 0 )
	;-----------------------------------------------------------------------------

		Set aaDusfergonLevel to aaDusfergonLevel + 1

		;-----------------------------------------------------------------------------
		;Update weapon stats
		;-----------------------------------------------------------------------------
		;Use Mod functions instead of Set, incase another script modifies these values
		
		Set Damage to Call aaDusfergonIncrVal ( fDamageMult + AdjDamageMult ) ( aaDusfergonLevel - 1 )
		Set Speed to fSpeedMult + AdjSpeedMult
		Set Reach to fReachMult + AdjReachMult

		Set Value to lValueBase + ( fValueMult * ( aaDusfergonLevel - 1 ) )

		ModAttackDamage Damage self
		ModWeaponSpeed Speed self
		ModWeaponReach Reach self
		ModWeight fWeightMult self
		ModObjectHealth fHealthMult self
		SetGoldValue_T Value self
		;There is no ModGoldValue_T as of OBSE v21

		;-----------------------------------------------------------------------------
		;Update enchantment stats
		;-----------------------------------------------------------------------------

		if ( aaDusfergonLevel >= sEnchStart )

			;-----------------------------------------------------------------------------
			;Set flag for enchantment option menu
			;-----------------------------------------------------------------------------
			if ( ( ( aaDusfergonLevel - sEnchStart ) %  sEnchLevel ) == 0 )

				Set EnchSelect to 1

			endif

			;-----------------------------------------------------------------------------
			;Increment Fire option
			;-----------------------------------------------------------------------------
			if ( aaDusfergonEnch == 1 )
			;-----------------------------------------------------------------------------
				Set aaDusfergonEnch1 to ( aaDusfergonEnch1 + 1 )

				;-----------------------------------------------------------------------------
				;Find the index of the effects
				;-----------------------------------------------------------------------------
				Set EnchIter to 0
				While ( EnchIter < EnchIndex )

					Let EffName := GetNthEffectItemName ench EnchIter
					
					if ( sv_Compare "Fire Damage" EffName ) == 0
						
						break
						
					endif

					Set EnchIter to ( EnchIter + 1 )	
				loop

				;-----------------------------------------------------------------------------
				;Increment effects
				;-----------------------------------------------------------------------------
				if ( EnchIter != EnchIndex )

					;-----------------------------------------------------------------------------
					;Fire Damage
					;-----------------------------------------------------------------------------
					Set Magnitude to Call aaDusfergonIncrVal fELDGMagnMult aaDusfergonEnch1
					Set Area to Call aaDusfergonIncrVal fELDGAreaMult aaDusfergonEnch1
					Set Duration to Call aaDusfergonIncrVal fELDGDuraMult aaDusfergonEnch1

					ModNthEffectItemMagnitude Magnitude ench EnchIter
					ModNthEffectItemArea Area ench EnchIter
					ModNthEffectItemDuration Duration ench EnchIter
					
					;-----------------------------------------------------------------------------
					;Weakness to Fire
					;-----------------------------------------------------------------------------
					Set EnchIter to ( EnchIter + 1 )

					Set Magnitude to Call aaDusfergonIncrVal fWKELMagnMult aaDusfergonEnch1
					Set Area to Call aaDusfergonIncrVal fWKELAreaMult aaDusfergonEnch1	
					Set Duration to Call aaDusfergonIncrVal fWKELDuraMult aaDusfergonEnch1

					ModNthEffectItemMagnitude Magnitude ench EnchIter
					ModNthEffectItemArea Area ench EnchIter
					ModNthEffectItemDuration Duration ench EnchIter
					
					;-----------------------------------------------------------------------------
					;Weakness to Magic
					;-----------------------------------------------------------------------------
					Set EnchIter to ( EnchIndex - 1 )

					Set Magnitude to Call aaDusfergonIncrVal fWKMAMagnMult aaDusfergonEnch1
					Set Area to Call aaDusfergonIncrVal fWKMAAreaMult aaDusfergonEnch1
					Set Duration to Call aaDusfergonIncrVal fWKMADuraMult aaDusfergonEnch1

					ModNthEffectItemMagnitude Magnitude ench EnchIter
					ModNthEffectItemArea Area ench EnchIter
					ModNthEffectItemDuration Duration ench EnchIter

					Set Cost to ( Cost + fELDGCostMult + fWKELCostMult + fWKMACostMult )
					
				endif
				
			;-----------------------------------------------------------------------------
			;Increment Ice option
			;-----------------------------------------------------------------------------
			elseif ( aaDusfergonEnch == 2 )
			;-----------------------------------------------------------------------------
				Set aaDusfergonEnch2 to ( aaDusfergonEnch2 + 1 )

				;-----------------------------------------------------------------------------
				;Find the index of the effects
				;-----------------------------------------------------------------------------
				Set EnchIter to 0
				While ( EnchIter < EnchIndex )

					Let EffName := GetNthEffectItemName ench EnchIter
					
					if ( sv_Compare "Frost Damage" EffName ) == 0
						
						break
						
					endif

					Set EnchIter to ( EnchIter + 1 )	
				loop

				;-----------------------------------------------------------------------------
				;Increment effects
				;-----------------------------------------------------------------------------
				if ( EnchIter != EnchIndex )

					;-----------------------------------------------------------------------------
					;Frost Damage
					;-----------------------------------------------------------------------------
					Set Magnitude to Call aaDusfergonIncrVal fELDGMagnMult aaDusfergonEnch2
					Set Area to Call aaDusfergonIncrVal fELDGAreaMult aaDusfergonEnch2
					Set Duration to Call aaDusfergonIncrVal fELDGDuraMult aaDusfergonEnch2

					ModNthEffectItemMagnitude Magnitude ench EnchIter
					ModNthEffectItemArea Area ench EnchIter
					ModNthEffectItemDuration Duration ench EnchIter
					
					;-----------------------------------------------------------------------------
					;Weakness to Frost
					;-----------------------------------------------------------------------------
					Set EnchIter to ( EnchIter + 1 )

					Set Magnitude to Call aaDusfergonIncrVal fWKELMagnMult aaDusfergonEnch2
					Set Area to Call aaDusfergonIncrVal fWKELAreaMult aaDusfergonEnch2
					Set Duration to Call aaDusfergonIncrVal fWKELDuraMult aaDusfergonEnch2

					ModNthEffectItemMagnitude Magnitude ench EnchIter
					ModNthEffectItemArea Area ench EnchIter
					ModNthEffectItemDuration Duration ench EnchIter		
					
					;-----------------------------------------------------------------------------
					;Weakness to Magic
					;-----------------------------------------------------------------------------
					Set EnchIter to ( EnchIndex - 1 )

					Set Magnitude to Call aaDusfergonIncrVal fWKMAMagnMult aaDusfergonEnch2
					Set Area to Call aaDusfergonIncrVal fWKMAAreaMult aaDusfergonEnch2
					Set Duration to Call aaDusfergonIncrVal fWKMADuraMult aaDusfergonEnch2

					ModNthEffectItemMagnitude Magnitude ench EnchIter
					ModNthEffectItemArea Area ench EnchIter
					ModNthEffectItemDuration Duration ench EnchIter

					Set Cost to ( Cost + fELDGCostMult + fWKELCostMult + fWKMACostMult )
					
				endif

			;-----------------------------------------------------------------------------
			;Increment Volt option
			;-----------------------------------------------------------------------------
			elseif ( aaDusfergonEnch == 3 )
			;-----------------------------------------------------------------------------
				Set aaDusfergonEnch3 to ( aaDusfergonEnch3 + 1 )

				;-----------------------------------------------------------------------------
				;Find the index of the effects
				;-----------------------------------------------------------------------------
				Set EnchIter to 0
				While ( EnchIter < EnchIndex )

					Let EffName := GetNthEffectItemName ench EnchIter
					
					if ( sv_Compare "Shock Damage" EffName ) == 0
						
						break
						
					endif

					Set EnchIter to ( EnchIter + 1 )	
				loop

				;-----------------------------------------------------------------------------
				;Increment effects
				;-----------------------------------------------------------------------------
				if ( EnchIter != EnchIndex )

					;-----------------------------------------------------------------------------
					;Shock Damage
					;-----------------------------------------------------------------------------
					Set Magnitude to Call aaDusfergonIncrVal fELDGMagnMult aaDusfergonEnch3
					Set Area to Call aaDusfergonIncrVal fELDGAreaMult aaDusfergonEnch3
					Set Duration to Call aaDusfergonIncrVal fELDGDuraMult aaDusfergonEnch3

					ModNthEffectItemMagnitude Magnitude ench EnchIter
					ModNthEffectItemArea Area ench EnchIter
					ModNthEffectItemDuration Duration ench EnchIter
					
					;-----------------------------------------------------------------------------
					;Weakness to Shock
					;-----------------------------------------------------------------------------
					Set EnchIter to ( EnchIter + 1 )

					Set Magnitude to Call aaDusfergonIncrVal fWKELMagnMult aaDusfergonEnch3
					Set Area to Call aaDusfergonIncrVal fWKELAreaMult aaDusfergonEnch3
					Set Duration to Call aaDusfergonIncrVal fWKELDuraMult aaDusfergonEnch3

					ModNthEffectItemMagnitude Magnitude ench EnchIter
					ModNthEffectItemArea Area ench EnchIter
					ModNthEffectItemDuration Duration ench EnchIter
					
					;-----------------------------------------------------------------------------
					;Weakness to Magic
					;-----------------------------------------------------------------------------
					Set EnchIter to ( EnchIndex - 1 )

					Set Magnitude to Call aaDusfergonIncrVal fWKMAMagnMult aaDusfergonEnch3
					Set Area to Call aaDusfergonIncrVal fWKMAAreaMult aaDusfergonEnch3
					Set Duration to Call aaDusfergonIncrVal fWKMADuraMult aaDusfergonEnch3

					ModNthEffectItemMagnitude Magnitude ench EnchIter
					ModNthEffectItemArea Area ench EnchIter
					ModNthEffectItemDuration Duration ench EnchIter

					Set Cost to ( Cost + fELDGCostMult + fWKELCostMult + fWKMACostMult )
					
				endif

			;-----------------------------------------------------------------------------
			;Increment Knight-Slayer option
			;-----------------------------------------------------------------------------
			elseif ( aaDusfergonEnch == 4 )
			;-----------------------------------------------------------------------------
				Set aaDusfergonEnch4 to ( aaDusfergonEnch4 + 1 )

				;-----------------------------------------------------------------------------
				;Find the index of the effects
				;-----------------------------------------------------------------------------
				Set EnchIter to 0
				While ( EnchIter < EnchIndex )

					Let EffName := GetNthEffectItemName ench EnchIter
					
					if ( sv_Compare "Damage Fatigue" EffName ) == 0
						
						break
						
					endif

					Set EnchIter to ( EnchIter + 1 )	
				loop

				;-----------------------------------------------------------------------------
				;Increment effects
				;-----------------------------------------------------------------------------
				if ( EnchIter != EnchIndex )

					;-----------------------------------------------------------------------------
					;Damage Fatigue
					;-----------------------------------------------------------------------------
					Set Magnitude to Call aaDusfergonIncrVal fDGFAMagnMult aaDusfergonEnch4
					Set Area to Call aaDusfergonIncrVal fDGFAAreaMult aaDusfergonEnch4
					Set Duration to Call aaDusfergonIncrVal fDGFADuraMult aaDusfergonEnch4

					ModNthEffectItemMagnitude Magnitude ench EnchIter
					ModNthEffectItemArea Area ench EnchIter
					ModNthEffectItemDuration Duration ench EnchIter
					
					;-----------------------------------------------------------------------------
					;Disintegrate Weapon
					;-----------------------------------------------------------------------------
					Set EnchIter to ( EnchIter + 1 )

					Set Magnitude to Call aaDusfergonIncrVal fDIWEMagnMult aaDusfergonEnch4
					Set Area to Call aaDusfergonIncrVal fDIWEAreaMult aaDusfergonEnch4
					Set Duration to Call aaDusfergonIncrVal fDIWEDuraMult aaDusfergonEnch4

					ModNthEffectItemMagnitude Magnitude ench EnchIter
					ModNthEffectItemArea Area ench EnchIter
					ModNthEffectItemDuration Duration ench EnchIter
					
					;-----------------------------------------------------------------------------
					;Disintegrate Armor
					;-----------------------------------------------------------------------------
					Set EnchIter to ( EnchIter + 1 )

					Set Magnitude to Call aaDusfergonIncrVal fDIARMagnMult aaDusfergonEnch4
					Set Area to Call aaDusfergonIncrVal fDIARAreaMult aaDusfergonEnch4
					Set Duration to Call aaDusfergonIncrVal fDIARDuraMult aaDusfergonEnch4

					ModNthEffectItemMagnitude Magnitude ench EnchIter
					ModNthEffectItemArea Area ench EnchIter
					ModNthEffectItemDuration Duration ench EnchIter

					Set Cost to ( Cost + fDGFACostMult + fDIWECostMult + fDIARCostMult )
					
				endif

			;-----------------------------------------------------------------------------
			;Increment Mage-Slayer option
			;-----------------------------------------------------------------------------
			elseif ( aaDusfergonEnch == 5 )
			;-----------------------------------------------------------------------------
				Set aaDusfergonEnch5 to ( aaDusfergonEnch5 + 1 )

				;-----------------------------------------------------------------------------
				;Find the index of the effects
				;-----------------------------------------------------------------------------
				Set EnchIter to 0
				While ( EnchIter < EnchIndex )

					Let EffName := GetNthEffectItemName ench EnchIter
					
					if ( sv_Compare "Damage Magicka" EffName ) == 0
						
						break
						
					endif

					Set EnchIter to ( EnchIter + 1 )	
				loop

				;-----------------------------------------------------------------------------
				;Increment effects
				;-----------------------------------------------------------------------------
				if ( EnchIter != EnchIndex )

					;-----------------------------------------------------------------------------
					;Damage Magicka
					;-----------------------------------------------------------------------------
					Set Magnitude to Call aaDusfergonIncrVal fDGSPMagnMult aaDusfergonEnch5
					Set Area to Call aaDusfergonIncrVal fDGSPAreaMult aaDusfergonEnch5
					Set Duration to Call aaDusfergonIncrVal fDGSPDuraMult aaDusfergonEnch5

					ModNthEffectItemMagnitude Magnitude ench EnchIter
					ModNthEffectItemArea Area ench EnchIter
					ModNthEffectItemDuration Duration ench EnchIter
					
					;-----------------------------------------------------------------------------
					;Dispel
					;-----------------------------------------------------------------------------
					Set EnchIter to ( EnchIter + 1 )

					Set Magnitude to Call aaDusfergonIncrVal fDSPLMagnMult aaDusfergonEnch5
					Set Area to Call aaDusfergonIncrVal fDSPLAreaMult aaDusfergonEnch5
					
					ModNthEffectItemMagnitude Magnitude ench EnchIter
					ModNthEffectItemArea Area ench EnchIter
					
					;-----------------------------------------------------------------------------
					;Silence
					;-----------------------------------------------------------------------------
					Set EnchIter to ( EnchIter + 1 )

					Set Area to Call aaDusfergonIncrVal fSLNCAreaMult aaDusfergonEnch5
					Set Duration to Call aaDusfergonIncrVal fSLNCDuraMult aaDusfergonEnch5

					ModNthEffectItemArea Area ench EnchIter
					ModNthEffectItemDuration Duration ench EnchIter

					Set Cost to ( Cost + fDGSPCostMult + fDSPLCostMult + fSLNCCostMult )
					
				endif

			;-----------------------------------------------------------------------------
			endif ;( aaDusfergonEnch != 0 )
			;-----------------------------------------------------------------------------
			
			Set Charge to lChargeBase + ( fChargeMult * ( aaDusfergonLevel - 1 ) )
			SetObjectCharge Charge self
			SetEnchantmentCost Cost ench

		;-----------------------------------------------------------------------------
		endif ;( aaDusfergonLevel >= sEnchStart )
		;-----------------------------------------------------------------------------
		
		;-----------------------------------------------------------------------------
		;Set XPReq
		;-----------------------------------------------------------------------------
		Set XPReqHalf to Call aaDusfergonCalcXPReq sXPReqBase sXPReqMult XPReqHalf

		Set HalfOnce to 0

		;-----------------------------------------------------------------------------
		;Level up message
		;-----------------------------------------------------------------------------
		printc "%n leveled up to %g!" self aaDusfergonLevel

		Set Rando to rand 0 1

		if ( Rando < 0.23 )

			MessageEX "%n looks a little cleaner." self

		elseif ( Rando < 0.46 )

			MessageEX "%n feels more comfortable." self

		elseif ( Rando < 0.69 )

			MessageEX "%n adjusts in the hand." self

		elseif ( Rando < 0.92 )

			MessageEX "%n seems a little heftier." self

		else

			MessageEX "%n grasps latent power." self

		endif
		
	;-----------------------------------------------------------------------------
	loop ;( aaDusfergonLevel < sLevelCap && aaDusfergonXP >= aaDusfergonXPReq && EnchSelect == 0 )
	;-----------------------------------------------------------------------------

	;-----------------------------------------------------------------------------
	;Remove all event handlers if weapon was enchanted by player
	;-----------------------------------------------------------------------------
	if ( WarnOnce == 1 )

		if ( aaDusfergonEquip == 0 )

			RemoveEventHandler "OnHitWith" aaDusfergonOnHit
			
		endif

		RemoveEventHandler "OnEnchant" aaDusfergonOnEnchant

		Set WarnOnce to 0

	endif
	
;-----------------------------------------------------------------------------
end ;GameMode
;-----------------------------------------------------------------------------










;-----------------------------------------------------------------------------
begin MenuMode 1002 ;Inventory
;-----------------------------------------------------------------------------

	if ( fQuestDelayTime != ScriptLag )

		Set fQuestDelayTime to ScriptLag

	endif

	;-----------------------------------------------------------------------------
	;Shows enchantment effects if Player Ctrl + right-clicks weapon
	;-----------------------------------------------------------------------------
	if ( GetActiveMenuSelection == self && ( IsKeyPressed2 29 ) && ( IsKeyPressed2 257 ) )

		;Get actively growing enchantment
		if ( aaDusfergonEnch == 0 )

			Let EffActv := "Active enchantment: None"

		elseif ( aaDusfergonEnch == 1 )

			Let EffActv := "Active enchantment: Fire"

		elseif ( aaDusfergonEnch == 2 )

			Let EffActv := "Active enchantment: Ice"

		elseif ( aaDusfergonEnch == 3 )

			Let EffActv := "Active enchantment: Volt"

		elseif ( aaDusfergonEnch == 4 )

			Let EffActv := "Active enchantment: Knight-Slayer"

		elseif ( aaDusfergonEnch == 5 )

			Let EffActv := "Active enchantment: Mage-Slayer"

		endif	

		
		Set EnchIter to 0
		While ( EnchIter < EnchIndex )
			
			Let EffName := GetNthEffectItemName ench EnchIter
			Set Magnitude to GetNthEffectItemMagnitude ench EnchIter
			Set Area to GetNthEffectItemArea ench EnchIter
			Set Duration to GetNthEffectItemDuration ench EnchIter

			Set EffActv to sv_Construct "%z%r%r%z:%r%gpts %gft %gsec" EffActv EffName Magnitude Area Duration
				
			Set EnchIter to ( EnchIter + 1 )	
		loop

		MessageBoxEx "%z" EffActv
		
	endif

	;-----------------------------------------------------------------------------
	;Start ModelChange menus if Player right-clicks weapon
	;-----------------------------------------------------------------------------
	if ( GetActiveMenuSelection == self && ModelChange == 0 && ( IsKeyPressed2 257 ) )

		Set Button to -1
		Set ModelChange to 1
		
	endif

	;-----------------------------------------------------------------------------
	;Get the last option chosen
	;-----------------------------------------------------------------------------
	if ( ModelChange > 1 )

		Set Button to GetButtonPressed

	endif

	;-----------------------------------------------------------------------------
	;Choose primary weapon type
	;-----------------------------------------------------------------------------
	if ( ModelChange == 1 && Button == -1 )

		MessageBox "Choose a type:" "2H - Blade" "1H - Blade" "2H - Blunt" "1H - Blunt"
		Set ModelChange to 2

	;-----------------------------------------------------------------------------
	;Choose secondary weapon type
	;-----------------------------------------------------------------------------
	elseif ( ModelChange == 2 && Button > -1 )

		;-----------------------------------------------------------------------------
		;2H Blades
		;-----------------------------------------------------------------------------
		if ( Button == 0 )

			MessageBox "Choose a sub-type:" "Claymore" "Bastard"
			Set ModelChange to 3

		;-----------------------------------------------------------------------------
		;1H Blades
		;-----------------------------------------------------------------------------
		elseif ( Button == 1 )

			MessageBox "Choose a sub-type:" "Bastard" "Longsword" "Shortsword" "Dagger"
			Set ModelChange to 4

		;-----------------------------------------------------------------------------
		;2H Blunts
		;-----------------------------------------------------------------------------
		elseif ( Button == 2 )

			MessageBox "Choose a sub-type:" "Warhammer" "Battleaxe"
			Set ModelChange to 5

		;-----------------------------------------------------------------------------
		;1H Blunts
		;-----------------------------------------------------------------------------
		elseif ( Button == 3 )

			MessageBox "Choose a sub-type:" "Mace" "Waraxe"
			Set ModelChange to 6

		endif

		Set Button to -1
		
	;-----------------------------------------------------------------------------
	;Choose specific weapon model
	;-----------------------------------------------------------------------------
	;2H Blades
	;-----------------------------------------------------------------------------
	elseif ( ModelChange == 3 && Button > -1 )

		;MessageBox supports up to 10 buttons, for up to 10 options per category
	
		;-----------------------------------------------------------------------------
		;Claymores
		;-----------------------------------------------------------------------------
		if ( Button == 0 )

			MessageBox "Choose a form:" "Bastard" "Merciless" "Wolf" "Wolf Ricasso" "Serenity" "Zweihander" "Gotland" "Akatosh" "Ice" "Fire"
			Set IndexOffset to 0

		;-----------------------------------------------------------------------------
		;Bastard Swords
		;-----------------------------------------------------------------------------
		elseif ( Button == 1 )

			MessageBox "Choose a form:" "Type-A" "Type-B" "Type-C" "Type-D" "Type-E" "Clint XVI" "Angular Leaf" "Kinslayer" "Sorrow" "Despair"
			Set IndexOffset to 10

		endif

		;Prevents SetModel from being called until GetButtonPressed completes
		Set Button to -1
		Set ModelChange to 7

	;-----------------------------------------------------------------------------
	;1H Blades
	;-----------------------------------------------------------------------------
	elseif ( ModelChange == 4 && Button > -1 )

		;-----------------------------------------------------------------------------
		;Bastard Swords
		;-----------------------------------------------------------------------------
		if ( Button == 0 )

			MessageBox "Choose a form:" "Type-A" "Type-B" "Type-C" "Type-D" "Type-E" "Clint XVI" "Angular Leaf" "Kinslayer" "Sorrow" "Despair"
			Set IndexOffset to 20
			
		;-----------------------------------------------------------------------------
		;Longswords
		;-----------------------------------------------------------------------------
		elseif ( Button == 1 )

			MessageBox "Choose a form:" "Iron" "Fine Iron" "Steel" "Fine Steel" "Silver" "Ebony" "Daedric Katana" "Arming" "Moonbrand" "Baskethilt"
			Set IndexOffset to 30

		;-----------------------------------------------------------------------------
		;Shortswords
		;-----------------------------------------------------------------------------
		elseif ( Button == 2 )

			MessageBox "Choose a form:" "Iron" "Fine Iron" "Steel" "Fine Steel" "Silver" "Ebony" "Falshion" "Elhazan" "Seaward" "Eagle"
			Set IndexOffset to 40

		;-----------------------------------------------------------------------------
		;Daggers
		;-----------------------------------------------------------------------------
		elseif ( Button == 3 )

			MessageBox "Choose a form:" "Iron" "Fine Iron" "Steel" "Fine Steel" "Silver" "Ebony" "Stiletto" "Spike" "Elvin" "Claw"
			Set IndexOffset to 50
			
		endif

		Set Button to -1
		Set ModelChange to 7

	;-----------------------------------------------------------------------------
	;2H Blunts
	;-----------------------------------------------------------------------------
	elseif ( ModelChange == 5 && Button > -1 )

		;-----------------------------------------------------------------------------
		;Warhammers
		;-----------------------------------------------------------------------------
		if ( Button == 0 )

			MessageBox "Choose a form:" "Flanged Bronze" "Flanged Steel" "Morningstar Bronze" "Morningstar Steel" "Mormacil" "Maul" "Goblinstar" "Mirondil" "Mirondil Gilded"
			Set IndexOffset to 60

		;-----------------------------------------------------------------------------
		;Battleaxes
		;-----------------------------------------------------------------------------
		elseif ( Button == 1 )

			MessageBox "Choose a form:" "Bearded" "Fine Bearded" "War" "Rhino" "Sotonhorian" "Thorgeir" "Ziragon"
			Set IndexOffset to 70

		endif
	
		Set Button to -1
		Set ModelChange to 7

	;-----------------------------------------------------------------------------
	;1H Blunts
	;-----------------------------------------------------------------------------
	elseif ( ModelChange == 6 && Button > -1 )

		;-----------------------------------------------------------------------------
		;Maces
		;-----------------------------------------------------------------------------
		if ( Button == 0 )

			MessageBox "Choose a form:" "Warhammer" "Thame" "Morningstar Bronze" "Morningstar Steel" "Macil" "Warpick" "Sotonhorian" "Ziragon Warhammer" "Ziragon Warpick"
			Set IndexOffset to 80

		;-----------------------------------------------------------------------------
		;Waraxes
		;-----------------------------------------------------------------------------
		elseif ( Button == 1 )

			MessageBox "Choose a form:" "Bearded" "Fine Bearded" "War" "Sotonhorian" "Thorgeir" "Ziragon" "Mirondil" "Mirondil Gilded"
			Set IndexOffset to 90

		endif
		
		Set Button to -1
		Set ModelChange to 7

	;-----------------------------------------------------------------------------
	;Set new model
	;-----------------------------------------------------------------------------
	elseif ( ModelChange == 7 && Button > -1 )
	
		Set aaDusfergonModel to IndexOffset + Button

		;-----------------------------------------------------------------------------
		;Set new stat adjustments
		;-----------------------------------------------------------------------------
		if ( aaDusfergonModel < 10 )

			Set AdjDamageBase to sClaymoreDamageBase
			Set AdjSpeedBase to fClaymoreSpeedBase
			Set AdjReachBase to fClaymoreReachBase

			Set AdjDamageMult to fClaymoreDamageMult
			Set AdjSpeedMult to fClaymoreSpeedMult
			Set AdjReachMult to fClaymoreReachMult

		elseif ( aaDusfergonModel < 20 )

			Set AdjDamageBase to sBastard2HDamageBase
			Set AdjSpeedBase to fBastard2HSpeedBase
			Set AdjReachBase to fBastard2HReachBase

			Set AdjDamageMult to fBastard2HDamageMult
			Set AdjSpeedMult to fBastard2HSpeedMult
			Set AdjReachMult to fBastard2HReachMult

		elseif ( aaDusfergonModel < 30 )

			Set AdjDamageBase to sBastard1HDamageBase
			Set AdjSpeedBase to fBastard1HSpeedBase
			Set AdjReachBase to fBastard1HReachBase

			Set AdjDamageMult to fBastard1HDamageMult
			Set AdjSpeedMult to fBastard1HSpeedMult
			Set AdjReachMult to fBastard1HReachMult

		elseif ( aaDusfergonModel < 40 )
			
			Set AdjDamageBase to sLongswordDamageBase
			Set AdjSpeedBase to fLongswordSpeedBase
			Set AdjReachBase to fLongswordReachBase

			Set AdjDamageMult to fLongswordDamageMult
			Set AdjSpeedMult to fLongswordSpeedMult
			Set AdjReachMult to fLongswordReachMult

		elseif ( aaDusfergonModel < 50 )

			Set AdjDamageBase to sShortswordDamageBase
			Set AdjSpeedBase to fShortswordSpeedBase
			Set AdjReachBase to fShortswordReachBase

			Set AdjDamageMult to fShortswordDamageMult
			Set AdjSpeedMult to fShortswordSpeedMult
			Set AdjReachMult to fShortswordReachMult

		elseif ( aaDusfergonModel < 60 )

			Set AdjDamageBase to sDaggerDamageBase
			Set AdjSpeedBase to fDaggerSpeedBase
			Set AdjReachBase to fDaggerReachBase

			Set AdjDamageMult to fDaggerDamageMult
			Set AdjSpeedMult to fDaggerSpeedMult
			Set AdjReachMult to fDaggerReachMult

		elseif ( aaDusfergonModel < 70 )

			Set AdjDamageBase to sWarhammerDamageBase
			Set AdjSpeedBase to fWarhammerSpeedBase
			Set AdjReachBase to fWarhammerReachBase

			Set AdjDamageMult to fWarhammerDamageMult
			Set AdjSpeedMult to fWarhammerSpeedMult
			Set AdjReachMult to fWarhammerReachMult

		elseif ( aaDusfergonModel < 80 )

			Set AdjDamageBase to sBattleaxeDamageBase
			Set AdjSpeedBase to fBattleaxeSpeedBase
			Set AdjReachBase to fBattleaxeReachBase

			Set AdjDamageMult to fBattleaxeDamageMult
			Set AdjSpeedMult to fBattleaxeSpeedMult
			Set AdjReachMult to fBattleaxeReachMult

		elseif ( aaDusfergonModel < 90 )

			Set AdjDamageBase to sMaceDamageBase
			Set AdjSpeedBase to fMaceSpeedBase
			Set AdjReachBase to fMaceReachBase

			Set AdjDamageMult to fMaceDamageMult
			Set AdjSpeedMult to fMaceSpeedMult
			Set AdjReachMult to fMaceReachMult

		elseif ( aaDusfergonModel < 100 )

			Set AdjDamageBase to sWaraxeDamageBase
			Set AdjSpeedBase to fWaraxeSpeedBase
			Set AdjReachBase to fWaraxeReachBase

			Set AdjDamageMult to fWaraxeDamageMult
			Set AdjSpeedMult to fWaraxeSpeedMult
			Set AdjReachMult to fWaraxeReachMult

		;Safeguard incase junk data gets into aaDusfergonModel
		else

			Set AdjDamageBase to 0
			Set AdjSpeedBase to 0
			Set AdjReachBase to 0

			Set AdjDamageMult to 0
			Set AdjSpeedMult to 0
			Set AdjReachMult to 0

		endif

		;-----------------------------------------------------------------------------
		;Set new weapon stats
		;-----------------------------------------------------------------------------
		Set Damage to ( sDamageBase + AdjDamageBase ) + ( ( fDamageMult + AdjDamageMult ) * ( aaDusfergonLevel - 1 ) )
		Set Speed to ( fSpeedBase + AdjSpeedBase ) + ( ( fSpeedMult + AdjSpeedMult ) * ( aaDusfergonLevel - 1 ) )
		Set Reach to ( fReachBase + AdjReachBase ) + ( ( fReachMult + AdjReachMult ) * ( aaDusfergonLevel - 1 ) )
		
		SetAttackDamage Damage self
		SetWeaponSpeed Speed self
		SetWeaponReach Reach self
		
		
		Call aaDusfergonSetModel self

		MessageEx "%n has changed form." self
		Set ModelChange to 0

	;-----------------------------------------------------------------------------
	endif ;ModelChange != 0
	;-----------------------------------------------------------------------------
	
;-----------------------------------------------------------------------------
end ;MenuMode Inventory
;-----------------------------------------------------------------------------






;-----------------------------------------------------------------------------
begin MenuMode 1042 ;MenuMode Enchanting
;-----------------------------------------------------------------------------

	if ( fQuestDelayTime != ScriptLag )

		Set fQuestDelayTime to ScriptLag

	endif
	
	;-----------------------------------------------------------------------------
	;Warn the player against enchanting	
	;-----------------------------------------------------------------------------
	if ( GetEnchMenuBaseItem == self && WarnOnce == 0)
		
		MessageBoxEx "%n rattles as if to resist enchantment." self
		Set WarnOnce to 1
		SetEventHandler "OnEnchant" aaDusfergonOnEnchant

	elseif ( GetEnchMenuBaseItem != self )

		Set WarnOnce to 0
		RemoveEventHandler "OnEnchant" aaDusfergonOnEnchant
		
	endif
	
;-----------------------------------------------------------------------------
end ;MenuMode Enchanting
;-----------------------------------------------------------------------------